You know the game of Telephone? That one where a bunch of people line up, and the first person whispers some message in the second person’s ear, then the second person whispers it to the third, and so on down the line, and then at the end some ridiculous message comes out from all the errors which have compounded along the way. This post is about modelling the whole world as a game of Telephone. Information Not Perfectly Conserved Is Completely Lost Information is not binary; it’s not something we either know or don’t. Information is uncertain, and that uncertainty lies on a continuum - 10% confidence is very different from 50% confidence which is very different from 99.9% confidence. In Telephone, somebody whispers a word, and I’m not sure if it’s “dish” or “fish”. I’m uncertain, but not maximally uncertain; I’m still pretty sure it’s one of those two words, and I might even think it’s more likely one than the other. Information is lost, but it’s not completely lost. But if you’ve played Telephone, you probably noticed that by the time the message reaches the end, information is more-or-less completely lost, unless basically-everyone managed to pass the message basically-perfectly. You might still be able to guess the length of the original message (since the length is passed on reasonably reliably), but the contents tend to be completely scrambled. Main takeaway: when information is passed through many layers, one after another, any information not nearly-perfectly conserved through nearly-all the “messages” is lost. Unlike the single-message case, this sort of “long-range” information passing is roughly binary. In fact, we can prove this mathematically. Here’s the rough argument: At each step, information about the original message (as measured by mutual information ) can only decrease (by the Data Processing Inequality ). But mutual information can never go below zero, so… The mutual information is decreasing and bounded below, which means it eventually approaches some limit (assuming it was finite to start). Once the mutual information is very close to that limit, it must decrease by very little at each step - i.e. information is almost-perfectly conserved. This does allow a little bit of wiggle room - non-binary uncertainty can enter the picture early on. But in the long run, any information not nearly-perfectly conserved by the later steps will be lost. Of course, the limit which the mutual information approaches could still be zero - meaning that all the information is lost. Any information not completely lost must be perfectly conserved in the long run. Deterministic Constraints It turns out that information can only be perfectly conserved when carried by deterministic constraints. For instance, in Telephone, information about the length of the original message will only be perfectly conserved if the length of each message is always (i.e. deterministically) equal to the length of the preceding message. There must be a deterministic constraint between the lengths of adjacent messages, and our perfectly-conserved information must be carried by that constraint. More formally: suppose our game of telephone starts with the message M 0 . Some time later, the message M n is whispered into my ear, and I turn around to whisper M n + 1 into the next person’s ear. The only way that M n + 1 can contain exactly the same information as M n about M 0 is if: There’s some functions f n , f n + 1 for which f n ( M n ) = f n + 1 ( M n + 1 ) with probability 1; that’s the deterministic constraint. The deterministic constraint carries all the information about M 0 - i.e. P [ M 0 | M n ] = P [ M 0 | f n ( M n ) ] . (Or, equivalently, mutual information of M 0 and M n equals mutual information of M 0 and f n ( M n ) .) Proof is in the Appendix. Upshot of this: we can characterize information-at-a-distance in terms of the deterministic constraints in a system. The connection between M n and M n + 1 is an information “channel”; only the information encoded in deterministic constraints between M n and M n + 1 will be perfectly conserved. Since any information not perfectly conserved is lost, only those deterministic constraints can carry information “at a distance”, i.e. in the large-n limit. The Thing For Which Telephone Is A Metaphor Imagine we have a toaster, and we’re trying to measure its temperature from the temperature of the air some distance away. We can think of the temperature of the toaster itself as the “original message” in a game of Telephone. The “message” is passed along by many layers of air molecules in between our toaster and our measurement device. (Note: unlike the usual game of Telephone, the air molecules could also be “encoding” the information in nontrivial ways, rather than just passing it along with some noise mixed in. For instance, the air molecules may be systematically cooler than the toaster. That’s not noise; it’s a predictable difference which we can adjust for. In other words, we can “decode” the originally-hotter temperature which has been “encoded” as a systematically-cooler temperature by the molecules. On the other hand, there will also be some unpredictable noise from e.g. small air currents.) More generally, whenever information is passed “over a long distance” (or a long time) in a physical system, there’s many layers of “messages” in between the start and the end. (This has to be the case, because the physics of our universe is local.) So, we can view it as a game of telephone: the only information which is passed over a sufficiently-long “distance” is information perfectly transmitted by deterministic constraints in the system. Everything else is lost. Let’s formalize this. Suppose we have a giant causal model representing the low-level physics of our universe: Giant causal model representing the low-level physics of our universe. Each node is a random variable; arrows show cause-and-effect relationships. We can draw cuts in this graph, i.e. lines which “cut off” part of the graph from the rest. In the context of causal models, these are called “Markov blankets”; their interpretation is that all variables on one side are statistically independent of all variables on the other side given the values of any edges which cross the blanket. For instance, a physical box which I close at one time and open at a later time is a Markov blanket - the inside can only interact with the outside via the walls of the box or via the state when the box is first closed/opened (i.e. the “walls” along the time-dimension). Two example Markov Blankets. These cut the causal graph in two; variables inside are independent of variables outside given variables on the edges which are cut. We want to imagine a sequence of nested Markov blankets, each cutting off all the previous blankets from the rest of the graph. These Markov blankets are the “messages” in our metaphorical game of Telephone. In the toaster example, these are sequential layers of air molecules between the toaster and the measurement. Two sequences of nested Markov blankets. These are the “messages” in our metaphorical game of Telephone; information from M n − 1 can pass to M n + 1 and beyond only via M n . Our theorem says that, in the “long distance” limit (i.e. n → ∞ ), constraints of the form f n ( M n ) = f n + 1 ( M n + 1 ) determine which information is transmitted. Any information not perfectly carried by the deterministic constraints is lost. Another example: consider a box of gas, just sitting around. We can choose our “layers of nested Markov blankets” to be snapshots of the microscopic states of all the molecules at sequential times. At the microscopic level, molecules are bouncing around chaotically; quantum uncertainty is quickly amplified by the chaos . The only information which is relevant to long-term predictions about the gas molecules is information carried by deterministic constraints - e.g. conservation of energy, conservation of the number of molecules, or conservation of the volume of the box. Any other information about the molecules’ states is eventually lost. So, it’s natural to abstractly represent the “gas” via the “macroscopic state variables” energy, molecule count and volume (or temperature, density and pressure, which are equivalent); these are the variables which can carry information over long time horizons. If we found some other deterministic constraint on the molecules’ dynamics, we might want to add that to our list of state variables. The Big Loophole Note that our constraints only need to be deterministic in the limit . At any given layer, they need only be “approximately deterministic”, i.e. f n ( M n ) = f n + 1 ( M n + 1 ) with probability close to 1 (or f n ( M n ) ≈ f n + 1 ( M n + 1 ) , in which case the leading-order bits are equal with probability close to 1). As long as that approximation improves at each step, converging to perfect determinism in the limit, it works. In practice, this is mainly relevant when information is copied redundantly over many channels. An example: suppose I start with a piece of string, cut two more pieces of string to match its length, then throw out the original. Each of the two new strings has some “noise” in its length, which we’ll pretend is normal with mean zero and standard deviation σ , independent across the two strings. Now, I iterate the process. For each of my two pieces of string, I cut two new pieces to match the length of that one, and throw away my old string. Again, noise is added in the process; same assumptions as before. Then, for each of my four pieces of string, I cut two new pieces to match the length of that one, and throw away my old string. And so forth. We can represent this as a binary-tree-shaped causal model; each new string is an independent noisy measurement of its parent: … and we can draw layers of Markov blankets horizontally: Now, there is never any deterministic constraint between M n and M n + 1 ; M n + 1 is just a bunch of “measurements” of M n , and every one of those measurements has some independent noise in it. And yet, it turns out that information is transmitted in the limit in this system. Specifically, the 2 n measurements at layer n are equivalent to a single noisy measurement of the original string length with normally-distributed noise of magnitude √ 2 n − 1 2 n σ . In the limit, it converges to a single measurement with noise of standard deviation σ . That’s not a complete loss of information. So what’s the deterministic constraint which carries that information? We can work backward through the proofs to calculate it; it turns out to be the average of the measurements at each layer. Because the noise in each measurement is independent (given the previous layer), the noise in the average shrinks at each step. In the limit, the average of one layer becomes arbitrarily close to the average of the next. That raises an interesting question: do all deterministic-in-the-limit constraints work roughly this way, in all systems? That is, do deterministic constraints which show up only in the limit always involve an average of conditionally-independent noise terms, i.e. something central-limit-theorem-like? I don’t know yet, but I suspect the answer is “yes”. Why Is This Interesting? First, this is a ridiculously powerful mathematical tool. We can take a causal system, choose any nested sequence of Markov blankets which we please, look at deterministic constraints between sequential layers, and declare that only those constraints can transmit information in the limit. Personally, I’m mostly interested in this as a way of characterizing abstraction. I believe that most abstractions used by humans in practice are summaries of information relevant at a distance . The theorems in this post show that those summaries are estimates/distributions of deterministic (in the limit) constraints in the systems around us. For my immediate purposes , the range of possible “type-signatures” of abstractions has dramatically narrowed; I now have a much better idea of what sort of data-structures to use for representing abstractions. Also, looking for local deterministic constraints (or approximately-deterministic constraints) in a system is much more tractable algorithmically than directly computing long-range probability distributions in large causal models. (Side note: the previous work already suggested conditional probability distributions as the type-signature of abstractions, but that’s quite general, and therefore not very efficient to work with algorithmically. Estimates-of-deterministic-constraints are a much narrower subset of conditional probability distributions.) Connections To Some Other Pieces Content Warning: More jargon-y; skip this section if you don’t want poorly-explained information on ideas-still-under-development. In terms of abstraction type-signatures and how to efficiently represent them, the biggest remaining question is how exponential-family distributions and the Generalized Koopman-Pitman-Darmois Theorem fit into the picture. In practice, it seems like estimates of those long-range deterministic constraints tend to fit the exponential-family form, but I still don’t have a really satisfying explanation of when or why that happens. Generalized KPD links it to (conditional) independence, which fits well with the overarching framework , but it’s not yet clear how that plays with deterministic constraints in particular. I expect that there’s some way to connect the deterministic constraints to the “features” in the resulting exponential family distributions, similar to a canonical ensemble in statistical mechanics. If that works, then it would complete the characterization of information-at-a-distance, and yield quite reasonable data structures for representing abstractions. Meanwhile, the theorems in this post already offer some interesting connections. In particular, this correspondence theorem (which I had originally written off as a dead end) turns out to apply directly. So we actually get a particularly strong form of correspondence for abstractions; there’s a fairly strong sense in which all the natural abstractions in an environment fit into one “global ontology”, and the ontologies of particular agents are all (estimates of) subsets of that ontology (to the extent that the agents rely on natural abstractions). Also, this whole thing fits very nicely with some weird intuitions humans have about information theory. Basically, humans often intuitively think of information as binary/set-like; many of our intuitions only work in cases where information is either perfect or completely absent. This makes representing information quantities via Venn diagrams intuitive, and phenomena like e.g. negative interaction information counterintuitive. But if our “information” is mostly representing information-at-a-distance and natural abstractions, then this intuition makes sense: that information is generally binary/set-like. The left circle is “information in X”, the middle is “information in both X and Y”, and the left circle excluding the middle is “information in X when we already know Y”. They all add in the obvious way - i.e. “information in X” = “information in X when we already know Y” + “information in both X and Y”. Isn’t that intuitive? Shame it falls apart with more variables . (Source: wikipedia ) Appendix: Information Conservation We want to know when random variables M 1 , M 2 and X factor according to both M 2 → M 1 → X and M 1 → M 2 → X , i.e. P [ M 2 , M 1 , X ] = P [ X | M 1 ] P [ M 1 | M 2 ] P [ M 2 ] … and P [ M 2 , M 1 , X ] = P [ X | M 2 ] P [ M 2 | M 1 ] P [ M 1 ] Intuitively, this says that M 1 and M 2 contain exactly the same information about X ; information is perfectly conserved in passing from one to the other. (Side note: any distribution which factors according to M 2 → M 1 → X also factors according to the reversed chain X → M 1 → M 2 . In the main post, we mostly pictured the latter structure, but for this proof we’ll use the former; they are interchangeable. We've also replaced " M 0 " with " X ", to distinguish the "original message" more.) First, we can equate the two factorizations and cancel P [ M 1 , M 2 ] from both sides to find P [ X | M 1 ] = P [ X | M 2 ] ... which must hold for ALL M 1 , M 2 , X with P [ M 1 , M 2 ] > 0 . This makes sense: M 1 and M 2 contain the same information about X , so the distribution of X given M 1 is the same as the distribution of X given M 2 - assuming that P [ M 1 , M 2 ] > 0 . Next, define f k ( M k ) : = ( x → P [ X = x | M k ] ) , i.e. f k gives the posterior distribution of X given M k . Our condition P [ X | M 1 ] = P [ X | M 2 ] for all M 1 , M 2 , X with P [ M 1 , M 2 ] > 0 can then be written as f 1 ( M 1 ) = f 2 ( M 2 ) … for all M 1 , M 2 with P [ M 1 , M 2 ] > 0 . That’s the deterministic constraint. (Note that f matters only up to isomorphism, so any invertible transformation of f can be used instead, as long as we transform both f 1 and f 2 .) Furthermore, a lemma of the Minimal Map Theorem says that P [ X | ( x → P [ X = x | M k ] ) ] = P [ X | M k ] , so we also have P [ X | M k ] = P [ X | f k ( M k ) ] . In other words, P [ X | M k ] depends only on the value of the deterministic constraint. This shows that any solutions to the information conservation problem must take the form of a deterministic constraint f 1 ( M 1 ) = f 2 ( M 2 ) , with X dependent only on the value of the constraint. We can also easily show the converse: if we have a deterministic constraint, with X dependent only on the value of the constraint, then it solves the information conservation problem. This proof is one line: P [ X | M 1 = m 1 ] = P [ X | f 1 ( M 1 ) = f 1 ( m 1 ) ] = P [ X | f 2 ( M 2 ) = f 2 ( m 2 ) ] = P [ X | M 2 = m 2 ] … for any m 1 , m 2 which satisfy the constraint f 1 ( m 1 ) = f 2 ( m 2 ) .