Infra-Bayesian physicalism (IBP) is a mathematical formalization of computationalist metaphysics: the view that whether something exists is a matter of whether a particular computation is instantiated anywhere in the universe in any way. In this post, we cover the basics of IBP, both rigorously and informally, its relevance to agent foundations and the alignment problem, and present new definitions that remove the biggest limitation in the previous formulation of IBP: the monotonicity requirement. Having read the original post on IBP is not required to understand this post, though prior familiarity with infra-Bayesianism is useful for understanding the technical parts. Why Physicalism? A physicalist agent - that is, an agent that uses IBP - does not regard itself as inherently special. This is in contrast to a Cartesian agent . A precise definition of an IBP agent is highly technical and can be found in the original IBP post, but here are some ways in which physicalist agents and Cartesian agents differ: To a Cartesian agent, actions and observations are fundamental. To a physicalist agent, computations are fundamental. A physicalist agent's rewards are determined by which computations are instantiated in the universe and to what extent; we will give a rigorous formalism for this later in the post. Cartesian agents have a sharp Cartesian boundary between the agent and the environment. Physicalist agents do not. A Cartesian agent is a fundamental part of its ontology. It models the world purely in terms of its actions and observations, so it naturally treats its actions observations as "more fundamental" than the laws of physics. A physicalist agent naturally views all of the universe on equal footing. IBP naturally solves many problems in agent foundations: The problem of privilege: A Cartesian agent using the Solomonoff prior will give unreasonably high credence to beliefs such as, "If every single pixel recorded by my camera is the exact same color, this will immediately cause the fine-structure constant to double". This is because, in relation to the agent's input channel , the Kolmogorov complexity of an otherwise-simple hypothesis that depends on a pixel's color is very low. Such issues are also relevant when a Cartesian agent is considering simulation hypotheses. By contrast, a physicalist agent will give low credence to such hypotheses since a description of these pixels based on the fundamental laws of physics is extremely complicated; solving the problem of privilege was the main motivation for developing IBP. [1] Unobserved rewards: With a Cartesian agent, it is most natural to have its rewards be determined by its observations, but we want an AI to care about people regardless of the extent to which they're being observed. Substantial progress has been made on solving this problem for Cartesian agents, but the IBP formalism solves the problem of unobserved rewards automatically since a physicalist agent is not observation-centric. Defining what it means for two agents to be aligned: Even if a Cartesian agent cares about what it isn't observing, its reward function is ultimately defined in terms of its own actions and observations. This means that the rewards of different Cartesian agents are defined over different spaces, which poses a serious complication in trying to provide a rigorous definition of what it means for two agents to have the same rewards. Having such a definition isn't just important for solving the alignment problem; it's crucial for merely formalizing the alignment problem. By contrast, all physicalist agents have the same domain for their reward functions, so the definition of two physicalist agents having the same reward function is trivial. Embedded agency : Since physicalist agents lack a Cartesian boundary, the problem of embedded agency is handled by default and learned the same way as the agent's environment; the robot/computer/meatbag in which the agent is embodied is just another part of the universe. [2] Decision theory: IBP agents use functional decision theory . A formalism that used causal decision theory instead would be considerably more complicated as it would require describing what "time" or a "cause" is. Anthropic problems: The formalism of a Cartesian agent presupposes its own existence, so it is unclear how Cartesian agents could use the fact that some Hypothesis A predicts the agent's existence more strongly than Hypothesis B as evidence in favor of Hypothesis A. The physicalist framework has no presumption of self-existence. A physicalist agent can recognize that its source code has more influence under hypotheses in which it's more likely to be instantiated, and will optimize its actions mainly for hypotheses in which it has influence. Mindcrime : Physicalist agents only care about how a computation/person is instantiated insofar as it affects which other computations are instantiated; whether they are instantiated in a human's brain, a supercomputer under Siberia, or the mind of the physicalist agent itself is immaterial. Thus, IBP handles the problem of mindcrime by default. [3] While it's important to solve these problems for their own sake, perhaps a bigger point is this: Based on priors, it seems unlikely that an arbitrary solution to the problem of privilege would also address all these other problems incidentally. The fact that IBP does address these problems [4] is evidence that IBP is getting at some "deeper truth" in agent foundations, and (more speculatively) that agentic behaviors arising in AI systems (LLMs or otherwise) may eventually converge to behaving similarly to physicalist agents. Moreover, IBP provides the necessary framework for Physicalist Superimitation , a proposed solution to the alignment problem. Γ and 2 Γ : Formalizing Instantiation A physicalist agent cares about which computations are instantiated in the universe. This begs the question: What, exactly, does it mean for a computation to be instantiated? In this section, we provide a rigorous formalism that also allows for possibilities beyond the binary of "instantiated" and "not instantiated". We denote the space of "computational universes" by Γ . We think of an element of Γ as specifying the result of every computation. [5] For example: What's 7 × 9 ? Is 13872901381 a prime number? In Conway's Game of Life, if you start from <12-gigabyte description of a starting position>, what color is the square at (0, 0) after 1,000,000 timesteps? How would <gigantic mess of code that precisely describes all of your neurons and their interactions> respond to <precise mathematical description of the sensory inputs from being passionately kissed by a tall, strong man in the middle of a thunderstorm>? How would the version of ChatGPT from 12:00 on January 1, 2025 respond to the query, "were do birds go when it rains???" if the random bits used by the algorithm are just a string of 0s? However, we don't need to worry about all computational facts, so we take Γ to be a finite set. [6] Mathematically, that's all there is to it: Γ is a finite set whose elements encode conceivable results for all the computations we care about. (For most elements of Γ , some of these encoded results will be incorrect.) In toy examples (such as the ones in the post on IBP and quantum mechanics ), Γ may consist solely of how the source code of the physicalist agent in question responds to various inputs. Now we consider the set 2 Γ : the set of all possible subsets of Γ . Basically, we view an element α ∈ 2 Γ as the set of all computational universes that are consistent with a particular history of the physical universe; we'll explain this connection more rigorously when we define bridge transforms. Here we discuss the interpretation of a given element of 2 Γ . Suppose that for all γ ∈ α , γ says that 7 × 9 = 63 . This means that only a single result of the computation "What's 7 × 9 ?" is consistent with α , so we say that this computation is instantiated according to α . If some γ ∈ α said that 7 × 9 = 16 and another γ ′ ∈ α said that 7 × 9 = 42 , it would mean that nothing in the physical universe could depend on which of these (if either) was. It would require that nobody put " 7 × 9 " into a functional calculator, that nobody calculated 7 × 9 in their head, that 63 items were never arranged in a 7 by 9 grid, etc. Similarly, if every γ in α gives exactly the same precise mathematical answer to "How would <gigantic mess of code that precisely describes all of your neurons and their interactions> respond to <precise mathematical description of the sensory inputs from being passionately kissed by a tall, strong man in the middle of a thunderstorm>?", it means that the computation of your brain experiencing a passionate kiss during a thunderstorm has been instantiated according to α . Or, in layman's terms, α says you've been kissed by a tall, strong man in the middle of a thunderstorm. [7] You can still have imperfect information about the result of a computation without it being instantiated. If you're a straight man who dislikes getting wet, you can conclude that being kissed by a man during a thunderstorm would be unpleasant without the full computation being run. Only knowing the mathematically precise manner in which it's unpleasant requires the computation being fully instantiated. This is how physicalist agents naturally avoid mindcrime; if a physicalist agent wants to know some facts about a computation but having that computation be instantiated could incur a significant loss, the agent may use some heuristics to narrow down the possible results of the computation, but would avoid conducting a detailed simulation that would tell it everything. For later definitions, we'll need the set e l Γ = { ( γ , α ) ∈ ( Γ × 2 Γ ) | γ ∈ α } . This is the set of ( γ , α ) pairs such that γ ∈ Γ is consistent with α , where α can be anything in 2 Γ . e l Γ is the domain of a physicalist agent's loss function. Definitions We start with some definitions from infra-Bayesianism. Definition 1 : A contribution θ on a finite [8] set X is a function from X to the interval [ 0 , 1 ] with ∑ x ∈ X θ ( x ) ≤ 1 . The space of all contributions on X is denoted Δ c X . Basically, a contribution is a probability distribution, except the "probabilities" may sum to something less than one. There is a natural order on Δ c X : Given θ 1 , θ 2 ∈ Δ c X , θ 1 ≤ θ 2 iff ∀ x ∈ X : θ 1 ( x ) ≤ θ 2 ( x ) . Definition 2 : An ultracontribution [9] Θ on X is a set of contributions on X that is: Closed (when viewed as a subset of R X ) Convex (If θ 1 , θ 2 ∈ Θ and p ∈ [ 0 , 1 ] , p θ 1 + ( 1 − p ) θ 2 ∈ Θ ) Downward closed (If θ 1 ∈ Θ and θ 2 ≤ θ 1 , then θ 2 ∈ Θ ) Nonempty (Due to downward closure, this equivalently means that Θ must contain the contribution θ ( x ) = 0 ) The space of all ultracontributions on X is denoted □ c X . None of the conditions for a set of contributions to be an ultracontribution is of immense conceptual importance; thinking of an ultracontribution as an arbitrary set of contributions is sufficient for developing an intuition. For thinking about ultracontributions, it's helpful to compare Bayesian agents to infra-Bayesian agents. A Bayesian agent's worldview consists of a single probability distribution, and the Bayesian agent will take whatever actions will minimize the expected value of its loss function for this probability distribution. [10] An infra-Bayesian agent's worldview consists of a single ultracontribution - a set of contributions (which is like a set of probability distributions). An infra-Bayesian agent will take whatever actions will minimize the worst expected loss across all of these contributions. The infra-Bayesian agent regards every contribution in its ultracontribution as a possibility. There is no notion of one contribution being "more likely" than another; every contribution in the ultracontribution is on even footing. Other concepts we will need: Given an ultracontribution Θ on X , s u p p Θ is the set of all x ∈ X such that ∃ θ ∈ Θ : θ ( x ) > 0 . Given a function s : X → Y and a contribution θ ∈ Δ c X , the pushforward of θ by s is a contribution s ∗ θ ∈ Δ c Y given by s ∗ θ ( y ) = ∑ x ∈ s − 1 ( y ) θ ( x ) . Thinking of θ as a probability distribution, s ∗ takes all the probability mass that was on x and sends it to y = s ( x ) , letting it pile up if multiple points in X get mapped to y . The pushforward of an ultracontribution Θ ∈ □ c X by s is s ∗ Θ ∈ □ c Y , where s ∗ Θ is what you get from sending every θ ∈ Θ to s ∗ θ . Formally, s ∗ Θ = { s ∗ θ | θ ∈ Θ } . More abstractly, s ∗ represents both a function Δ c X → Δ c Y and a function □ c X → □ c Y . [11] Given a subset X ′ ⊆ X , the characteristic function χ X ′ is an operator Δ c X → Δ c X defined by χ X ′ θ ( x ) = { θ ( x ) if x ∈ X ′ 0 otherwise For Θ ∈ □ c X , χ X ′ Θ = { χ X ′ θ | θ ∈ Θ } . Fixing y ∈ X , we define the contribution δ y by δ y ( x ) = { 1 if x = y 0 otherwise Recalling our previous discussion of Γ and 2 Γ , we now have the tools for defining a computationalist hypothesis. Definition 3 : A computationalist hypothesis is a Θ ∈ □ c ( Γ × 2 Γ ) such that s u p p Θ ⊆ e l Γ For all mappings s : Γ → Γ , χ e l Γ ( s × i d 2 Γ ) ∗ Θ ⊆ Θ The first condition means that computational hypotheses are internally consistent. If Γ is the 3-element set { 1 , 2 , 3 } , Θ cannot contain a contribution that gives nonzero probability to an element like ( 3 , { 1 , 2 } ) that says, "Only computational universes 1 and 2 are consistent with the physical universe; also, computational universe 3 is the one that answers mathematical questions correctly." The second condition means a computationalist hypothesis cannot assert with high confidence that a computation will have a given result without that computation being instantiated. More concretely, if Θ contains δ ( 1 , { 1 , 2 , 3 } ) , condition (2) means that Θ must also contain the contributions δ ( 2 , { 1 , 2 , 3 } ) and δ ( 3 , { 1 , 2 , 3 } ) . (These contributions can be obtained by letting s ( γ ) = 2 or s ( γ ) = 3 .) It is possible for Θ to contain the contribution δ ( 1 , { 1 } ) without containing a contribution that gives nonzero probability to other possibilities. The bottom line: If Θ claims that a computational universe is consistent with the physical universe, it must incorporate the possibility that this computational universe is correct. Θ cannot know that 7 × 9 = 63 without 7 × 9 getting computed somewhere. Bridge Transforms and Monotonicity Given a description of the physical universe, how can we determine which programs are instantiated, i.e., select elements of 2 Γ ? To answer this question we use bridge transforms : functions that take joint beliefs over computational and physical universes as input and produce beliefs about which computations are instantiated. We will use Φ to denote the set of all physical universes we're considering. As with Γ , Φ has no mathematical structure beyond being a finite [12] set. Here are some examples of sets that could be used for Φ : The set of all functions { 1 , 2 , … T } × { 1 , 2 , … N } × { 1 , 2 , … N } → { 0 , 1 } . This can be interpreted as the set of all conceivable histories of a two-state cellular automaton that is run for T timesteps on an N × N toroidal grid. The set of all histories of the Iterated Prisoner's Dilemma of length T . 2 Γ . This possibility is important conceptually since it allows us to define a notion of idempotence for bridge transforms. The union of the above sets. Any finite subset of the space of all conceivable physical universes. An element of Φ would be a fully-detailed, timeless description of everything that exists according to some theory. However, the details of Φ are of minimal importance to understanding IBP. We don't care about Φ in its own right; it's just something we'll use to produce computationalist hypotheses. We formalize joint beliefs over computational and physical universes as elements of □ c ( Γ × Φ ) . Note that entanglements of beliefs about computations and physics are often quite natural. With Φ as a set of possible histories of a cellular automaton, different elements of Φ naturally correspond to computational universes that give different answers to "How will this cellular automaton evolve according to <rules>?". Straightforward entanglements also arise from considering agents; physical universes in which an agent chooses "cooperate" in the Prisoner's Dilemma will correspond to computational universes in which the agent's source code yields "cooperate" when given the appropriate input. We now define the liberal bridge transform. The liberal bridge transform is a mapping B r : □ c ( Γ × Φ ) → □ c ( Γ × 2 Γ × Φ ) . The resulting ultracontribution contains all contributions that are "consistent" with the ultracontribution over Γ × Φ in a sense that is closely related to the conditions of a computationalist hypothesis. Definition 4 : Let Γ and Φ be finite sets and let Ξ ∈ □ c ( Γ × Φ ) . The liberal bridge transform of Ξ is B r ( Ξ ) ∈ □ c ( Γ × 2 Γ × Φ ) , where ω is an element of B r ( Ξ ) if and only if: s u p p ω ⊆ e l Γ × Φ For all mappings s : Γ → Γ , p r Γ × Φ χ e l Γ × Φ ( s × i d 2 Γ × Φ ) ∗ ω ∈ Ξ Here, p r Γ × Φ is the projection operator; p r Γ × Φ ( γ , α , ϕ ) = ( γ , ϕ ) . These conditions closely mirror those for computationalist hypothesis. In fact, the liberal bridge transform provides an alternative characterization of computationalist hypotheses: Proposition 1 : Θ ∈ □ c ( Γ × 2 Γ ) is a computationalist hypothesis if and only if: s u p p Θ ⊆ e l Γ ( i d Γ × d i a g 2 Γ ) ∗ Θ ⊆ B r ( Θ ) For using the bridge transform on Θ ∈ □ c ( Γ × 2 Γ ) we take Φ = 2 Γ . d i a g is the diagonal operator that sends x to ( x , x ) . In condition (2), ( i d Γ × d i a g 2 Γ ) simply takes ( γ , α ) ∈ Γ × 2 Γ to ( γ , α , α ) . For the proof of Proposition 1 we'll be working with two copies of 2 Γ in the bridge transform; for clarity, we'll denote the one that's treated as the physical universe as 2 Γ p h y s , the one produced by the bridge transform as 2 Γ m a t h , and write e l Γ m a t h and e l Γ p h y s for the subsets e l Γ ⊆ Γ × 2 Γ m a t h and e l Γ ⊆ Γ × 2 Γ p h y s . First, however, we need a basic lemma: Lemma 1 : For θ ∈ Δ c ( Γ × 2 Γ p h y s ) , χ e l Γ m a t h × 2 Γ p h y s ( s × i d 2 Γ m a t h × 2 Γ p h y s ) ∗ ( i d Γ × d i a g 2 Γ ) ∗ θ = ( i d Γ × d i a g 2 Γ ) ∗ χ e l Γ p h y s ( s × i d 2 Γ p h y s ) ∗ θ Proof : Consider a δ ( γ , α ) ∈ Δ c ( Γ × 2 Γ p h y s ) . The LHS sends this element δ ( γ , α ) → δ ( γ , α , α ) → δ ( s ( γ ) , α , α ) → { δ ( s ( γ ) , α , α ) if s ( γ ) ∈ α 0 if s ( γ ) ∉ α The RHS sends this element δ ( γ , α ) → δ ( s ( γ ) , α ) → { δ ( s ( γ ) , α ) if s ( γ ) ∈ α 0 if s ( γ ) ∉ α → { δ ( s ( γ ) , α , α ) if s ( γ ) ∈ α 0 if s ( γ ) ∉ α proving Lemma 1 in the case that θ = δ ( γ , α ) . Any contribution can be written as a linear combination of δ -contributions and all of the mappings in Lemma 1 are linear, so Lemma 1 holds for all θ ∈ Δ c ( Γ × 2 Γ p h y s ) . ■ Proof of Proposition 1 : Condition (1) is the same in Proposition 1 and Definition 3, and both of them also ensure that Θ is an ultracontribution. Therefore, we only need to worry about condition (2). First, let Θ be a computationalist hypothesis. Showing that ( i d Γ × d i a g 2 Γ ) ∗ Θ ⊆ B r ( Θ ) is equivalent to showing that, for all s : Γ → Γ and all ω ∈ ( i d Γ × d i a g 2 Γ ) ∗ Θ , we have p r Γ × 2 Γ p h y s χ e l Γ m a t h × 2 Γ p h y s ( s × i d 2 Γ m a t h × 2 Γ p h y s ) ∗ ω ∈ Θ . Writing ω = ( i d Γ × d i a g 2 Γ ) ∗ θ for some θ ∈ Θ , we have p r Γ × 2 Γ p h y s χ e l Γ m a t h × 2 Γ p h y s ( s × i d 2 Γ m a t h × 2 Γ p h y s ) ∗ ( i d Γ × d i a g 2 Γ ) ∗ θ = p r Γ × 2 Γ p h y s ( i d Γ × d i a g 2 Γ ) ∗ χ e l Γ p h y s ( s × i d 2 Γ p h y s ) ∗ θ = χ e l Γ p h y s ( s × i d 2 Γ p h y s ) ∗ θ ∈ Θ The first equality is from Lemma 1. The inclusion on the final line follows from the definition of a computationalist hypothesis. To show that the conditions of Proposition 1 imply that Θ is a computationalist hypothesis, we know that p r Γ × 2 Γ p h y s χ e l Γ m a t h × 2 Γ p h y s ( s × i d 2 Γ m a t h × 2 Γ p h y s ) ∗ ( i d Γ × d i a g 2 Γ ) ∗ θ ∈ Θ from condition (2) of Proposition 1 and the definition of the bridge transform. The above equalities show that this equals χ e l Γ p h y s ( s × i d 2 Γ p h y s ) ∗ θ , so condition (2) of Definition 3 is fulfilled. ■ For what follows, we will need to introduce the information order on Δ c ( Γ × 2 Γ × Φ ) . Given ( γ 1 , α 1 , ϕ 1 ) , ( γ 2 , α 2 , ϕ 2 ) ∈ Γ × 2 Γ × Φ , we write ( γ 1 , α 1 , ϕ 1 ) ⪯ ( γ 2 , α 2 , ϕ 2 ) iff γ 1 = γ 2 , ϕ 1 = ϕ 2 , and α 1 ⊆ α 2 . [13] Then, given ω 1 , ω 2 ∈ Δ c ( Γ × 2 Γ × Φ ) , we have ω 1 ⪯ ω 2 iff for all functions f : Γ × 2 Γ × Φ → [ 0 , ∞ ) such that ( γ 1 , α 1 , ϕ 1 ) ⪯ ( γ 2 , α 2 , ϕ 2 ) ⟹ f ( γ 1 , α 1 , ϕ 1 ) ≤ f ( γ 2 , α 2 , ϕ 2 ) (that is, for all nondecreasing f ), we have ∑ x ∈ Γ × 2 Γ × Φ ω 1 ( x ) f ( x ) ≤ ∑ x ∈ Γ × 2 Γ × Φ ω 2 ( x ) f ( x ) This means that ω 1 ⪯ ω 2 if for every smidgeon of probability assigned by ω 1 there's a corresponding smidgeon of probability assigned by ω 2 , and the smidgeon of probability assigned by ω 2 is assigned to an element of Γ × 2 Γ × Φ that is the same as for ω 1 , except the 2 Γ component of ω 2 may be a superset of the 2 Γ component of ω 1 . [14] We can get a computationalist hypothesis from B r ( Ξ ) by projecting to Γ × 2 Γ . However, every computationalist hypothesis produced this way contains contributions that correspond to the possibility that every computation is instantiated. For example, if δ ( γ , ϕ ) ∈ Θ , it is easy to see that δ ( γ , { γ } , ϕ ) ∈ B r ( Ξ ) from the definition of the liberal bridge transform. Such contributions claim that any given configuration of the physical universe will only be consistent with a single configuration of the computational universe, which implies that all computations are instantiated. More broadly, if ω ∈ B r ( Ξ ) and ω ′ ⪯ ω , we must also have ω ′ ∈ B r ( Ξ ) ( Proposition 2.4 in the original IBP post). This was called the monotonicity principle. The original post on IBP discussed the consequences of only considering computationalist hypotheses that are derived from the liberal bridge transform, and therefore obey the monotonicity principle, in great detail. Here we define a conservative bridge transform that can yield any computationalist hypothesis, and thus is unbound from the monotonicity principle and the limitations discussed in the original IBP post. Definition 5 : Let Γ and Φ be finite sets and let Ξ ∈ □ c ( Γ × Φ ) . Denote the set of maximal elements of B r ( Ξ ) in the information order by Ω m a x . Define Ω = { χ e l Γ × Φ ( s × i d s Γ × Φ ) ∗ ( ω ) | s : Γ → Γ , ω ∈ Ω m a x } , and let ¯ ¯¯¯¯¯¯ ¯ C H ( Ω ) denote the closed convex hull of Ω . [15] The conservative bridge transform of Ξ , denoted C B r ( Ξ ) ∈ □ c ( Γ × 2 Γ × Φ ) , is the downward closure of ¯ ¯¯¯¯¯¯ ¯ C H ( Ω ) in the natural order on contributions, i.e. the set { ω | ∃ ω ′ ∈ ¯ ¯¯¯¯¯¯ ¯ C H ( Ω ) : ω ≤ ω ′ } The big difference between the liberal and conservative bridge transforms is the step of only considering maximal elements of B r ( Ξ ) in the information order; going from Ω m a x to Ω is necessary to make the resulting set closed under χ e l Γ × Φ ( s × i d s Γ × Φ ) ∗ , and the rest is just bookkeeping to ensure that we actually end up with an ultracontribution. Proposition 2 : p r Γ × 2 Γ C B r ( Ξ ) is a computationalist hypothesis. Proof : For condition (1) of Definition 3 ( s u p p Θ ⊆ e l Γ ), we observe that p r Γ × 2 Γ Ω has its support on e l Γ . Δ c e l Γ is a closed, convex, and downward closed (in the natural order on contributions), so p r Γ × 2 Γ C B r ( Ξ ) satisfies this condition as well. For condition (2) of Definition 3 ( ∀ s : Γ → Γ : χ e l Γ ( s × i d 2 Γ ) ∗ Θ ⊆ Θ ), we again note that it is satisfied by Θ = p r Γ × 2 Γ Ω . What remains is showing that it is preserved by taking the downward closure of the closed convex hull. Here, noting that the projection commutes with the operations we're interested in, we let Θ ⊆ Δ c ( Γ × 2 Γ ) be an arbitrary subset (not necessarily an ultracontribution) that satisfies ∀ s : Γ → Γ : χ e l Γ ( s × i d 2 Γ ) ∗ Θ ⊆ Θ and prove that each of the following operations preserves this condition: Convex hull: Let θ ∈ C H ( Θ ) , so θ = ∑ i p i θ i for θ i ∈ Θ , p i ∈ [ 0 , 1 ] . χ e l Γ ( s × i d 2 Γ ) ∗ ∑ i p i θ i = ∑ i p i χ e l Γ ( s × i d 2 Γ ) ∗ θ i ∈ C H ( Θ ) Closure: Let θ 1 , θ 2 … ∈ Θ be a convergent sequence and let θ = lim i → ∞ θ i . We need to show, for any s : Γ → Γ , that there is a series in Θ that converges to χ e l Γ ( s × i d 2 Γ ) ∗ θ . Such a series is given by χ e l Γ ( s × i d 2 Γ ) ∗ θ i , which proves closure. Downward closure: If θ ∈ Θ and θ ′ ≤ θ , then χ e l Γ ( s × i d 2 Γ ) ∗ θ ′ ≤ χ e l Γ ( s × i d 2 Γ ) ∗ θ . ■ Lemma 2 : If Θ is a computational hypothesis, the set of maximal elements of B r ( Θ ) in the information order is supported on the diagonal of Γ × 2 Γ m a t h × 2 Γ p h y s , i.e. the set of elements of the form ( γ , α , α ) . Proof : Let ω ∈ B r ( Θ ) . First we show that for all ( γ , α m a t h , α p h y s ) ∈ s u p p ( ω ) we have α m a t h ⊆ α p h y s . Suppose that ( γ , α m a t h , α p h y s ) ∈ s u p p ( ω ) with α m a t h containing some element γ ′ ∉ α p h y s . By downward closure, this means that p δ ( γ , α m a t h , α p h y s ) ∈ B r ( Θ ) for some p > 0 . Let s ( γ ′′ ) = γ ′ be the constant function. By the definition of the liberal bridge transform we must have p r Γ × 2 Γ p h y s χ e l Γ m a t h × 2 Γ p h y s ( s × i d 2 Γ m a t h × 2 Γ p h y s ) ∗ ( p δ ( γ , α m a t h , α p h y s ) ) ∈ Θ . We compute p r Γ × 2 Γ p h y s χ e l Γ m a t h × 2 Γ p h y s ( s × i d 2 Γ m a t h × 2 Γ p h y s ) ∗ ( p δ ( γ , α m a t h , α p h y s ) ) = p r Γ × 2 Γ p h y s χ e l Γ m a t h × 2 Γ p h y s ( p δ ( γ ′ , α m a t h , α p h y s ) ) = p δ ( γ ′ , α p h y s ) This violates the support condition of a computationalist hypothesis since γ ′ ∉ α p h y s , establishing a contradiction. This shows that for all ( γ , α m a t h , α p h y s ) ∈ s u p p ( ω ) we have α m a t h ⊆ α p h y s . Now we show that for every maximal ω ∈ B r ( Θ ) we have ( γ , α m a t h , α p h y s ) ∈ s u p p ( ω ) we have α m a t h = α p h y s . Consider the function r : Γ × 2 Γ m a t h × 2 Γ p h y s → Γ × 2 Γ m a t h × 2 Γ p h y s defined by r ( γ , α m a t h , α p h y s ) = ( γ , α p h y s , α p h y s ) Since α m a t h ⊆ α p h y s we have r ∗ ( ω ) ⪰ ω for all ω ∈ B r ( Θ ) . ω ∈ B r ( Θ ) implies that p r Γ × 2 Γ p h y s ω ∈ Θ by Proposition 2.1 of the original IBP post. Furthermore, Proposition 1 says that ( i d Γ × d i a g 2 Γ ) ∗ Θ ⊆ B r ( Θ ) , so r ∗ ( ω ) = ( i d Γ × d i a g 2 Γ ) ∗ p r Γ × 2 Γ p h y s ω is in B r ( Θ ) . r ∗ ( ω ) = ω iff ω is supported on the diagonal, so all maximal elements of B r ( Θ ) are supported on the diagonal. ■ Proposition 3 : If Θ is a computationalist hypothesis, p r Γ × 2 Γ m a t h C B r ( Θ ) = Θ (idempotence). Proof : First, we show that p r Γ × 2 Γ m a t h C B r ( Θ ) ⊆ Θ . Since Θ is convex, closed, and downward closed, we only need to show that, for Ω as defined in Definition 5, p r Γ × 2 Γ m a t h Ω ⊆ Θ . Let ω ∈ Ω . Then ω = χ e l Γ m a t h × 2 Γ p h y s ( s × i d 2 Γ m a t h × 2 Γ p h y s ) ∗ ( ω ′ ) for some ω ′ in the set of maximal elements in B r ( Θ ) . By Lemma 2, ω ′ is supported on the diagonal of Γ × 2 Γ m a t h × 2 Γ p h y s , i.e. the set of elements of the form ( γ , α , α ) . From this it follows that p r Γ × 2 Γ m a t h ω ′ ∈ Θ since p r Γ × 2 Γ m a t h ω ′ = p r Γ × 2 Γ p h y s ω ′ ∈ Θ by Proposition 2.1 of the original IBP post, and thus θ = p r Γ × 2 Γ m a t h ω = p r Γ × 2 Γ m a t h χ e l Γ m a t h × 2 Γ p h y s ( s × i d 2 Γ m a t h × 2 Γ p h y s ) ∗ ( ω ′ ) = χ e l Γ m a t h ( s × i d 2 Γ m a t h ) ∗ p r Γ × 2 Γ m a t h ω ′ ∈ Θ The inclusion follows from the definition of a computationalist hypothesis and p r Γ × 2 Γ m a t h ω ′ ∈ Θ . The final equality can be proved similarly to Lemma 1; all the mappings are linear, p r Γ × 2 Γ m a t h χ e l Γ m a t h × 2 Γ p h y s ( s × i d 2 Γ m a t h × 2 Γ p h y s ) ∗ sends δ ( γ , α , α ) → δ ( s ( γ ) , α , α ) → { δ ( s ( γ ) , α , α ) if s ( γ ) ∈ α 0 if s ( γ ) ∉ α → { δ ( s ( γ ) , α ) if s ( γ ) ∈ α 0 if s ( γ ) ∉ α and χ e l Γ m a t h ( s × i d 2 Γ m a t h ) ∗ p r Γ × 2 Γ m a t h sends δ ( γ , α , α ) → δ ( γ , α ) → δ ( s ( γ ) , α ) → { δ ( s ( γ ) , α ) if s ( γ ) ∈ α 0 if s ( γ ) ∉ α Next we show that Θ ⊆ p r Γ × 2 Γ m a t h C B r ( Θ ) . By Proposition 1, ( i d Γ × d i a g 2 Γ ) ∗ Θ ⊆ B r ( Θ ) . Letting θ be an element of Θ and ω = ( i d Γ × d i a g 2 Γ ) ∗ θ ∈ B r ( Θ ) , ω will be a maximal element of B r ( Θ ) in the information order ( ⪯ ) if it is a maximal element of B r ( Θ ) in the natural order on contributions ( ≤ ) . This follows from Lemma 2: the maximal elements (in the information order) of B r ( Θ ) are supported on the diagonal, so the only way for ω = ( i d Γ × d i a g 2 Γ ) ∗ θ to not be maximal (in the information order) is to have an ω ′ such that ∀ x ∈ ( Γ , 2 Γ m a t h , 2 Γ p h y s ) : ω ′ ( x ) ≥ ω ( x ) and ∃ x ∈ ( Γ , 2 Γ m a t h , 2 Γ p h y s ) : ω ′ ( x ) > ω ( x ) , which is equivalent to ω ′ > ω (in the natural order on contributions). By Proposition 2.1 of the original IBP post, we have Θ = p r Γ × 2 Γ p h y s B r ( Θ ) , so a maximal θ ∈ Θ in the natural order on contributions must correspond to a maximal ω ∈ B r ( Θ ) in the natural order on contributions. [16] Looking at the definition of the conservative bridge transform, we see if ω is a maximal element of B r ( Θ ) then ω ∈ Ω . (To see this, just let s ( γ ) = γ and remember that B r ( Θ ) is supported on e l Γ m a t h × 2 Γ p h y s . ) Ω ⊆ C B r ( Θ ) (as is clear from the definition of the conservative bridge transform), so we must have ω ∈ C B r ( Θ ) , and therefore θ ∈ p r Γ × 2 Γ m a t h C B r ( Θ ) if θ is maximal. Finally, C B r ( Θ ) is downward closed, so if θ is a non-maximal element of Θ , i.e., θ < θ ′ for some maximal θ ′ ∈ Θ , the fact that θ ′ ∈ p r Γ × 2 Γ m a t h C B r ( Θ ) also ensures that θ ∈ p r Γ × 2 Γ m a t h C B r ( Θ ) . ■ Corollary 1 : Every computationalist hypothesis can be derived as the conservative bridge transform of some Ξ ∈ Γ × Φ for some Φ . Unlike the liberal bridge transform, the conservative bridge transform can yield any computationalist hypothesis - including ones that say that certain programs aren't running. Using the conservative bridge transform instead of the liberal bridge transform eliminates the monotonicity principle. Properties of computationalist hypotheses We now state and prove some basic facts about computationalist hypotheses. Proposition 4 : Let f : 2 Γ → { t r u e , f a l s e } be a boolean function and A be a subset of Γ . If for all ( γ , α ) in the support of a computationalist hypothesis Θ we have γ ∈ A if and only if f ( α ) is true, then for all ( γ , α ) ∈ s u p p Θ we have either α ⊆ A or α ∩ A = ∅ . Proof : Let A ⊆ Γ and suppose there is a ( γ , α ) ∈ s u p p Θ such that γ A , γ A c ∈ α , but γ A ∈ A and γ A c ∉ A . Let θ ∈ Θ be supported on this ( γ , α ) . Define s ′ , s ′′ : Γ → Γ by s ′ ( λ ) = γ A and s ′′ ( λ ) = γ A c . Then ( γ A , α ) is in the support of χ e l Γ s ′ ∗ ( θ ) and ( γ A c , α ) is in the support of χ e l Γ s ′′ ∗ ( θ ) . Both these contributions are in Θ by the definition of a computationalist hypothesis. \(\\) Both of these elements have the same α and exactly one of them has its Γ -component in A , contradicting the assumption of the proposition. ■ We can let f ( α ) be, "Does α say Computation #1 is instantiated?". If A is the set of all γ ∈ Γ which say Computation #2 yields a certain result (let's call it 0 ) and Θ claims that Computation #1 will only be instantiated if Computation #2 yields the result 0 , then Proposition 4 means that Computation #2 must be instantiated according to Θ . [17] Proposition 5 : The intersection of any family of computationalist hypotheses is a computationalist hypothesis. Proof : The intersection of downward-closed closed convex sets is downward-closed, closed, and convex, so the intersection of (potentially infinitely many) ultracontributions is an ultracontribution. Next, let θ ∈ ⋂ Θ i . Then ∀ i : θ ∈ Θ i , so we have ∀ i : ∀ s : Γ → Γ : χ e l Γ ( s × i d 2 Γ ) ∗ θ ∈ Θ i , and therefore ∀ s : Γ → Γ : χ e l Γ ( s × i d 2 Γ ) ∗ θ ∈ ⋂ Θ i . We also have s u p p θ ⊆ e l Γ from θ ∈ Θ 1 . ■ Proposition 6 : The convex hull of two computationalist hypotheses is a computationalist hypothesis. Proof : The convex hull of two closed convex sets is closed and convex. For downward closure, let θ ∈ C H ( Θ 1 , Θ 2 ) and let θ ′ ≤ θ = p θ 1 + ( 1 − p ) θ 2 for some p ∈ [ 0 , 1 ] , θ 1 ∈ Θ 1 , and θ 2 ∈ Θ 2 . Write θ ′ = min ( θ ′ , p θ 1 ) + ( θ ′ − min ( θ ′ , p θ 1 ) ) . The first term is ≤ p θ 1 , so it must equal p times some element of Θ 1 by the downward closure of Θ 1 . The second term must be ≤ ( 1 − p ) θ 2 because θ ′ − p θ 1 ≤ ( 1 − p ) θ 2 and θ ′ − θ ′ ≤ ( 1 − p ) θ 2 since θ 2 is non-negative. By the downward closure of Θ 1 and Θ 2 , this means that θ ′ = p θ ′ 1 + ( 1 − p ) θ ′ 2 for some θ ′ 1 ∈ Θ 1 and θ ′ 2 ∈ Θ 2 , so θ ′ ∈ C H ( Θ 1 , Θ 2 ) . Now we need to show that ∀ s : Γ → Γ : χ e l Γ ( s × i d 2 Γ ) ∗ C H ( Θ 1 , Θ 2 ) ⊆ C H ( Θ 1 , Θ 2 ) . Let θ = p θ 1 + ( 1 − p ) θ 2 be an element of C H ( Θ 1 , Θ 2 ) . χ e l Γ ( s × i d 2 Γ ) ∗ is a linear operator, so we have χ e l Γ ( s × i d 2 Γ ) ∗ θ = χ e l Γ ( s × i d 2 Γ ) ∗ ( p θ 1 + ( 1 − p ) θ 2 ) = p χ e l Γ ( s × i d 2 Γ ) ∗ θ 1 + ( 1 − p ) χ e l Γ ( s × i d 2 Γ ) ∗ θ 2 ) χ e l Γ ( s × i d 2 Γ ) ∗ θ i ∈ Θ i since the Θ i are computationalist hypotheses, so we have χ e l Γ ( s × i d 2 Γ ) ∗ C H ( Θ 1 , Θ 2 ) ⊆ C H ( Θ 1 , Θ 2 ) ■ Proposition 7 : A finite mixture of computationalist hypotheses is a computational hypothesis. That is, if Θ i are computationalist hypotheses and for all i ≤ n we have p i ≥ 0 and ∑ n i = 1 p i ≤ 1 , then ∑ n i = 1 p i Θ i is a computationalist hypothesis. Proof : We need to show that ∀ s : Γ → Γ : χ e l Γ ( s × i d 2 Γ ) ∗ ∑ n i = 1 p i Θ i ⊆ ∑ n i = 1 p i Θ i . As in the proof of Proposition 6, this follows from the linearity of χ e l Γ ( s × i d 2 Γ ) ∗ and the fact that the Θ i are computationalist hypotheses. Now we only need to show convexity, closure, and downward closure: Convexity: Let θ ∈ ∑ j q j ∑ n i = 1 p i Θ i . Then θ = ∑ j q j ∑ i p i θ j i = ∑ i p i ∑ j q j θ j i ∈ ∑ i p i Θ i Closure: Consider a convergent sequence ∑ i p i θ 1 i , ∑ i p i θ 2 i … . We need to show that lim m → ∞ ∑ i p i θ m i ∈ ∑ i p i Θ i .We know that Δ c ( Γ × 2 Γ ) is compact since Γ is finite, so our sequence must contain a convergent subsequence ∑ i p i θ k 1 i , ∑ i p i θ k 2 i , … for which the sequence θ k 1 i , θ k 2 i … converges to some θ i for all i . θ i ∈ Θ i since Θ i is closed, so lim m → ∞ ∑ i p i θ k m i = ∑ i p i θ i ∈ ∑ i p i Θ i . Downward closure. From the proof of Proposition 6 we see that the mixture of two computationalist hypotheses is downward closed. That this holds for any n follows by induction since we can consider the mixture of k + 1 computationalist hypotheses as a mixture of 1 ∑ k i = 1 p i ∑ k i = 1 p i Θ i and Θ k + 1 . ■ If computationalist hypotheses did not obey any rules such as Propositions 4-7, that would be suggest that they were not a natural mathematical concept, and therefore not a promising tool for understanding agent foundations. While none of these properties are surprising, the fact computationalist hypotheses possess them is (weak) evidence of computationalist hypotheses being natural and useful. This is far from a complete list of the properties of computationalist hypotheses. The properties of the liberal bridge transform, which is related to computationalist hypotheses via Proposition 1, are investigated more fully in the original IBP post. [18] Further reading and future research This post's novel [19] content has been the definitions of computationalist hypotheses and the conservative bridge transform, and proofs concerning some of their properties. The surrounding discussion of infra-Bayesian physicalism has been the minimum necessary to contextualize and understand these novel contributions. The original IBP post provides many technical results for the liberal bridge transform and a more complete description of physicalist agents. [20] Readers who want to see IBP in action may be interested in the post on IBP and quantum mechanics , which provides several examples. [21] Readers who are interested in how IBP could offer a solution to the alignment problem are encouraged to read about Physicalist Superimitation . With monotonicity resolved, the biggest hole in the theory of IBP is the current lack of a tie-in to learning theory, and creating learning theory for physicalist agents is the most important IBP-centric research direction. This will include defining a notion of physicalist regret that admits learnability and proving regret bounds for physicalist agents. This is essential since regret bounds are a critical ingredient for proving that an agent is safe and aligned. Regret bounds are also natural candidates for giving a rigorous definition of what it means for an algorithm to be an agent. Another research direction is to create an axiomatic characterizations of a bridge transform - in other words, coming up with a list of properties and proving that there is only one potential bridge transform that satisfies all of them. This could lead to a new and improved definition of a bridge transform (like how the conservative bridge transform is an improvement over the liberal bridge transform in important ways) or give us more confidence that a bridge transform we have already formalized is "correct." Finally, other directions in the learning-theoretic research agenda - most notably compositionality and metacognition - will likely be relevant to IBP. Thanks to Cole Wyeth for reading a draft and offering suggestions, and to Vanessa for coming up with all of the math, providing many rounds of feedback, and being a wonderful wife. ^ The problem of privilege is discussed in more depth in the original IBP post . ^ While physicalist agents find it easy to reason about embedded agency, certain assumptions (e.g., an uncorrupted memory) are required for formal guarantees and learning. ^ A fear of mindcrime may interfere with learnability, however, so it may be necessary to add a small amount of willingness to risk mindcrime back into the physicalist framework, such as by having a physicalist agent by unconcerned about committing mindcrime so long as it's done on a single trusted computer. Even if this is a serious issue, however, IBP still provides a useful framework for formalizing the concept of mindcrime. ^ Perhaps excluding mindcrime, which is more of a concern of AI alignment than for agent foundations in the abstract. ^ For computations that don't halt, each element of Γ will still specify a result (e.g., the final state of a tape in a Turning machine). All such purported "results" for non-halting computations will be bullshit, but this is a nonissue since it will be impossible for anything that occurs in the physical universe to contradict such a purported result. In essence, whatever an element of Γ says about a particular computation boils down to, " If this computation halts, then its result will be such-and-such." ^ We expect everything to generalize smoothly to infinite Γ , but having Γ be finite simplifies the presentation. Additionally, with infra-Bayesianism it is very natural to focus on a finite quotient set of an infinite Γ while ignoring everything else. (Mathematically, we're just coarsening over all the results of all but finitely many computations; you don't need to understand what coarsening means to understand the rest of this post.) ^ Caveat: α does not necessitate that a tall, strong man has experienced kissing you . ^ This can be generalized to infinite X by letting θ be a measure. ^ These were called homogenous ultracontributions (HUCs) in the original IBP post. ^ The "grain of truth" problem says that, in general, an embedded agent with a single probability distribution cannot assign nonzero probability to the true state of the universe. Hence the need for infra-Bayesianism. ^ This abuse of notation is like how, given f : X → Y and X ′ ⊆ X , we write f ( X ′ ) to denote the image of X ′ . ^ As with Γ , restricting our attention to finite Φ is purely for simplicity. ^ We use the ⪯ symbol to distinguish the information order from the natural order on contributions, which we denote with ≤ . ^ This claim is formalized in Proposition 2.2 of the original IBP post. ^ The convex hull of a set X is the set of all objects that can be written as { ∑ i p i x i | p i ∈ [ 0 , 1 ] , ∑ i p i = 1 , x i ∈ X } ; it's the smallest convex superset of X . The closed convex hull is the closure of this set, i.e., the set of its limit points. ^ Note that projections preserve probability mass; ∑ ( γ , α p h y s ) ( p r Γ × 2 Γ p h y s θ ) ( γ , α p h y s ) = ∑ ( γ , α m a t h , α p h y s ) θ ( γ , α m a t h , α p h y s ) . ^ Computation #2 must be fully instantiated if it can yield exactly two results, but it may be only partly instantiated if it has more than two possible results. ^ There is at least one property of the liberal bridge transform that the conservative bridge transform does not possess: the refinement of an ultracontribution (that is to say, replacing an ultracontribution Θ with some subset of Θ ) used as an input to a bridge transform shouldn't add additional possibilities to the result of the bridge transform. Here's a counterexample: Let Γ = { 1 , 2 } and Φ = { ϕ } . Let ⊤ = Δ c ( Γ × Φ ) be the largest possible ultracontribution on Γ × Φ , i.e. the set of all possible contributions on it. Let Ξ be the downward closure (in the natural order on contributions) of { δ ( 1 , ϕ ) } , i.e. the set of all contributions that are supported on ( 1 , ϕ ) . Ξ is a refinement of ⊤ , but C B r ( Ξ ) is supported on ( 1 , { 1 } ) and C B r ( ⊤ ) is supported on ( 1 , { 1 , 2 } ) and ( 2 , { 1 , 2 } ) . B r ( ⊤ ) is supported on ( 1 , { 1 } ) (and everything else) due to the monotonicity principle. B r ( ⊤ ) can be interpreted as, "all conceivable combinations of computational and physical universes are possible". C B r ( ⊤ ) , however, confidently states that there is absolutely no connection between computations and physics. ^ Novel excluding Vanessa's shortform on which it is based ^ This post renders a significant fraction of the orginal IBP post obsolete, most notably the discussions of the monotonicity requirement. Additionally, non-monotonic IBP allows for many kinds of loss function for a selfish physicalist agent that has multiple copies running, while the monotonicity requirement had limited the original IBP post to considering agents that are solely concerned with minimizing the loss of their best-off copy. ^ Several of the proofs use the monotonicity principle, so investigating quantum mechanics with non-monotonic IBP is a potential research direction.