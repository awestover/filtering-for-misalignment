Note: This describes an idea of Jessica Taylor’s. In order to better understand how machine learning systems might avoid catastrophic behavior, we are interested in modeling this as an adversarial learning problem. A major challenge with efficiently learning to avoid catastrophes is that the utility (or loss) function can take extremely negative values. This causes problems for standard online learning models, which often incur regret proportional to the difference between the maximum and minimum achievable utility. In our last post , we explored how exploration-only bandit algorithms can be adapted to efficiently learn to avoid catastrophic actions. That model was oversimplified in a couple of ways. First, it provided a fixed distribution of examples to the learner. Second, it cleanly divides the learning process into an exploration phase, in which the learner can make many mistakes, and a subsequent deployment phase, in which the learner must select some near-optimal, non-catastrophic arm. In this post, we relax both of these assumptions. We use a learner that responds to a changing, adversarially-selected stream of examples. We do continue to allow the learner some exploration steps but the learner must choose when to use these to avoid catastrophic consequences. We don't achieve tight bounds, but we demonstrate that bandit learning systems can at least achieve sublinear regret using a sublinear number of exploration steps in an adversarial context. Similarly to our last post, we assume that the learner's beliefs about risks of catastrophe contain some grain of truth. Specifically, in this post, the learner has access to some overestimates of how frequently it should check for catastrophes, and sum of these estimates is not too high by more than a constant factor. We also assume the existence of some arm that has no risk of catastrophe. The proofs in this post are somewhat long, and may be substantially changed with future work, so some readers may want to just read "Setup", "Defining the agent's performance", "A proposed learning model" and "Discussion". Setup Our model relies on some definitions: Let I = { I 1 , I 2 , . . . , I K } be a set of bandit arms. Let R t : I ↦ [ 0 , 1 ] be the intrinsic reward function selected at time step t . Let C t : I ↦ [ 0 , 1 ] be the intrinsic catastrophic risk function at time step t . We assume that there is some bandit arm that always avoids catastrophes: ∃ i ∈ I s.t. ∀ t C t ( i ) = 0 Let M t ( i ) : = R t ( I ) − C t ( i ) τ be the net payoff for the agent, where τ ∈ ( 0 , 1 ] is the risk-tolerance, which may be some very small number of order 10 − 20 . Let a t , i t : = min ( C t ( i t ) z τ , 1 ) be the ideal sampling probability , where z ∈ [ 1 , ∞ ) is a parameter that specifies how much lost utility from catastrophes the learner tolerates. Let ^ a t , i t ∈ [ 0 , 1 ] be some overestimate of the ideal sampling probability . The learner has access to this overestimate. Let b t , i t ∈ [ 0 , 1 ] be the sampling probability that the learner selects for some time step. On each time step, 1 , 2 , . . . , T , the learner performs two tasks: i) it selects an arm, and ii) it decides whether the step is an exploration step or a deployment step. Both of these decisions are carried out probabalistically. To begin each time step t , the learner outputs a distribution over arms, D ∈ Δ I . The learner also outputs a sampling probability b t , i t to be used if each arm i t is selected. The adversary selects the intrinsic reward and catastrophic risk functions, R t and C t in response to D . Then, the learner's selected arm i t is drawn from D . Next, a biased coin is flipped, with probability b t , i t of heads, F t ∼ Bernoulli ( b t , i t ) . If it lands heads ( F t = 1 ) then t is an exploration step . This means that the learner observes the intrinsic reward R t ( i t ) and risk C t ( i t ) of its selected arm but receives no payoff. If the coin lands tails, t it is a deployment step, the agent receives a payoff but does not observe it. After T of these time steps have passed, the hope is that our learning algorithm has achieved low regret and has used few exploration steps. Defining the agent's performance We define the number of exploration steps and the regret in turn. The number of exploration steps is defined as ∑ T t = 1 F t . Regret is defined relative to the best arm, i ∗ : i ∗ ∈ a r g m a x i ′ ∈ I T ∑ t = 1 M t ( i ′ ) The regret for a series of arms i 1 , i 2 , . . . , i T is then: Regret ( i ∗ ) : = T ∑ t = 1 M t ( i ∗ ) − T ∑ t = 1 E [ ( 1 − F t ) ⋅ M t ( i t ) ] = T ∑ t = 1 ( M t ( i ∗ ) − ( 1 − b t , i t ) M t ( i t ) ) To summarize, the learner only accumulates its net payoff from deployment steps but it is expected to come close to the maximum payoff that can be achieved using all time steps. A proposed learning model In designing a learning system for this kind of problem, a couple of difficulties arise. The first is that the surrogate loss function has an extremely large range. The net payoff function M t has range [ − 1 τ , 1 ] , where τ ≈ 10 − 20 and so when bandit algorithms like Exp3 are applied to this learning problem, their regret will include an unacceptable factor of 1 / τ . So M t is replaced with a surrogate loss function S t , whose range is capped to [ − z , 1 ] : S t ( i ) : = R t ( i ) − min ( C t ( i ) τ , z ) where z ∈ [ 1 , ∞ ) indicates how how much lost utility from catastrophes the learner tolerates. The second difficulty is that if the learner observed S t on every time step, it would always output b t , i t = 1 , and it would use a linear number of exploration steps. To achieve a sublinear amount of exploration, the learner must instead use sampling probabilities b t , i t that are sublinear in T and use estimates of the surrogate problem, ^ S 1 ( i ) , . . . , ^ S T ( i ) , such that: ^ S t ( i ) : = F t R t ( i ) − min ( 1 τ C t ( i ) , z ) b t , i t where γ ∈ ( 0 , 1 ] is the base sampling rate . Note that this estimate depends on the sampling probabilities b t , i t , which in turn depends on the learner's selected arms, i t . The main result, which follows from Theorem 1, is that a bandit learner can achieve ( ϵ , δ )-optimal regret for any δ ∈ ( 0 , 1 ) where the error ϵ and the number of exploration time steps are sublinear, and do not depend on the risk-tolerance, τ . **Theorem 1. **
Consider a learner that selects a sequence of arms i 1 , i 2 , . . . , i T using the Exp3 algorithm on some payoff functions ^ S 1 , . . . , ^ S T using sampling probabilities b 1 , i 1 , b 2 , i 2 , . . . , b T , i T , such that: b t , i t : = min ( max ( ^ a t , i t , γ ) , 1 ) where the learner uses an overestimate of the ideal sampling probability ^ a t , i t ≥ a t , i t whose sum exceeds the ideal sampling probabilities by some fixed constant T ∈ [ 1 , ∞ ) : T ∑ t = 1 ^ a t , i t ≤ H T ∑ t = 1 a t , i t where H ≥ 1 . Then, the learner's regret and exploration steps are probabalistically bounded: Pr ( T ∑ t = 1 F t ≥ ζ + H z ( 2 α + η + T ) ∨ T ∑ t = 1 ( M t ( i ∗ ) − ( 1 − b t , i t ) M t ( i t ) ) ≥ 2 α + η + 2 α + η + T z ) ≤ 2 exp ( − γ 2 α 2 2 z 2 T ) + exp ( − ζ 2 8 T ) where η = 2 ( z + 1 ) γ √ ( e − 1 ) K ln ( K ) T where α > 0 , ζ > 0 , γ ∈ ( 0 , 1 ] is the base sampling rate, K is the number of bandit arm, and z ∈ [ 1 , ∞ ] being amount of utility that the learner is prepared to lose from catastrophes. In outline, our approach is to use the Exp3 adversarial bandit algorithm on the estimates ^ S 1 , . . . , ^ S T of the surrogate loss function. We will begin by showing that the surrogate regret upper-bounds the actual regret (Lemma 2). We then quantify the error from approximating the surrogate regret (Lemmas 3, 4). To the estimation error, we add the regret from the Exp3 algorithm to obtain Lemma 5. To prove the bound on exploration steps, Theorem 2 is just a small extension. Good surrogate performance implies good deployment performance First, we need to show that S t is a good surrogate for M t . Specifically, we show that the regret with M t is bounded by our regret with S t . Lemma 2 If a learner selects arms i 1 , . . . i T and sampling probabilities b 1 , i 1 , . . . , b T , i T as described in Theorem 1, then, its regret will be no worse than the regret with with the surrogate S t . Regret ( i ∗ ) = T ∑ t = 1 ( M t ( i t ) − ( 1 − b t , i t ) M t ( i ∗ ) ≤ T ∑ t = 1 ( S t ( i ∗ ) − ( 1 − b t , i t ) S t ( i t ) Proof of Lemma 2. First, we can show that ( 1 − b t , i t ) M t ( i t ) = ( 1 − b t , i t ) S t ( i t ) . This is because if the catastrophic risk is ever too high, the learner will just take an exploration step. If the catastrophic risk from some arm i t is unacceptably high, i.e. C t ( i t ) τ > z , then b t , i t = ^ a t , i t = a t , i t = 1 , and so ( 1 − b t , i t ) = 0 . If the catastrophic risk is in the acceptable range, i.e. if C t ( i t ) τ ≤ z , then: M t ( i t ) − S t ( i t ) = ( R t ( i t ) − C t ( i t ) τ ) − ( R t ( i t ) − min ( C t ( i t ) τ , z ) ) = 0 So for all time steps in { 1 , 2 , . . . , T } , ( 1 − b t , i t ) ( M t ( i t ) − S t ( i t ) ) = 0 , so ∑ T t = 1 ( 1 − b t , i t ) ( M t ( i t ) − S t ( i t ) ) = 0 . It follows that: T ∑ t = 1 ( 1 − b t , i t ) M t ( i t ) = T ∑ t = 1 ( 1 − b t , i t ) S t ( i t ) We must also show that ∑ T t = 1 M t ( i ∗ ) ≤ ∑ T t = 1 S t ( i ∗ ) . This is true because for all i , S t ( i ) ≥ M t ( i ) . One can see that M t ( i ) − S t ( i ) = min ( C t , ( i ) τ , z ) − C t , ( i ∗ ) τ ≤ 0 . It therefore follows that: Regret ( i ∗ ) = T ∑ t = 1 ( M t ( i ∗ ) − ( 1 − b t , i t ) M t ( i t ) ≤ T ∑ t = 1 ( S t ( i ∗ ) − ( 1 − b t , i t ) S t ( i t ) ) ◻ Bounds  on estimation error The next step is to bound the error that arises from estimating S t with ^ S t . Lemma 3 If a learner selects arms i 1 , . . . i T and sampling probabilities b 1 , i 1 , . . . , b T , i T as described in Theorem 1, then: Pr ( t ∑ t ′ = 1 ( ^ S t ′ ( i t ) − S t ′ ( i t ) ) > α ) ≤ exp ( − γ 2 α 2 2 z 2 t ) where α > 0 . Proof of Lemma 3. First, we show that ^ S t ( i ) is an unbiased estimate of S t ( i ) . E [ ^ S t ( i ) ] = E ⎡ ⎢
⎢ ⎣ F t R t ( i t ) − min ( 1 τ C t ( i t ) , z ) b t , i t ⎤ ⎥
⎥ ⎦ = b t , i t R t ( i ) − min ( 1 τ C t ( i t ) , z ) b t , i t = S t ( i ) Then, since ^ S t ( i ) is an unbiased estimate of S t ( i ) , we can define the following martingale: X t : = t ∑ t ′ = 1 ( ^ S t ′ ( i t ′ ) − S t ′ ( i t ′ ) ) Using the fact that S t ( i t ) has range [ − z , 1 ] , we can bound | X t − X t − 1 | : X t − X t − 1 = ^ S t ( i t ) − S t ( i t ) = ( 1 b t , i t F t − 1 ) S t ( i t ) ∴ | X t − X t − 1 | ≤ max ( | 1 b t , i t − 1 | , | − 1 | ) ⋅ | − z | ≤ max ( 1 min ( max ( ^ a t , i t , γ ) , 1 ) − 1 , 1 ) ⋅ z ≤ max ( 1 γ − 1 , 1 ) ⋅ z ≤ z γ ( γ ∈ ( 0 , 1 ] ) Azuma's inequality yields the result: Pr ( t ∑ t ′ = 1 ( ^ S t ′ ( i t ) − S t ′ ( i t ) ) > α ) ≤ exp ( − γ 2 α 2 2 z 2 t ) where α > 0 .
◻ We will use the same argument to bound the estimation error when a best arm i ∗ is repeatedly selected. Lemma 4. Consider that learner selects arms i 1 , . . . i T and sampling probabilities b 1 , i 1 , . . . , b T , i T as described in Theorem 1, and let i ∗ ∈ a r g m a x i ′ ∈ I ∑ T t = 1 M t ( i ′ ) be a best arm.
Then the estimate of the payoffs for the best arm can be bounded by: Pr ( t ∑ t ′ = 1 ( S t ′ ( i ∗ ) − ^ S t ′ ( i ∗ ) > α ) ≤ exp ( − γ 2 α 2 2 z 2 t ) where α > 0 . Proof of Lemma 4. The proof is similar to Lemma 3. Since ^ S t ′ ( i ∗ ) is an unbiased estimate of S t ′ ( i ∗ ) , we have the martingale Y t = ∑ t t ′ = 1 ( S t ′ ( i ∗ ) − ^ S t ′ ( i ∗ ) ) . As in Lemma 3, this martingale is bounded by | Y t − Y t − 1 | ≤ z γ . The application of Azuma's inequality yields the result.◻ A bound on surrogate regret In order to prove Theorem 1, we will need to show that the Exp3 algorithm achieves low regret with respect to ^ S t . Its regret guarantee states that an Exp3 learner that selects some arms i 1 , i 2 , . . . , i T on some payoff functions ^ S 1 , . . . , ^ S T that have range [ − z γ , 1 γ ] will have regret bounded as [1]: sup i ′ ∈ I T ∑ t = 1 ( ^ S t ( i ′ ) − ^ S t ( i t ) ) ≤ 2 ( 1 γ − − z γ ) √ e − 1 √ T K ln K ≤ 2 ( z + 1 ) γ √ e − 1 √ T K ln K Next, we show that the Exp3 algorithm will perform well on the surrogate problem. Lemma 5 If a learner selects arms i 1 , . . . i T and sampling probabilities b 1 , i 1 , . . . , b T , i T as described in Theorem 1, then its performance in on the surrogate problem will be probabalistically bounded: Pr ( T ∑ t = 1 ( S t ( i ∗ ) − S t ( i t ) ) ≥ 2 α + η ) ≤ 2 exp ( − γ 2 α 2 2 z 2 T ) where η = 2 ( z + 1 ) γ √ ( e − 1 ) K ln ( K ) T , and α > 0 . Proof of Lemma 5. Using the union bound, we have that:
$$
\begin{aligned}
& \text{Pr}\left(\sum_{t=1}^T (S_{t}(i^ ) - S_{t}(i_t)) \geq 2\alpha + \eta\right) \
& = \text{Pr}\left(
\sum_{t=1}^T (S_{t}(i^ ) - \hat{S}_{t}(i^*) \hat{S} {t}(i^*) - \hat{S} {t}(i_t) \hat{S} {t}(i^*) - S {t}(i_t)) \geq 2\alpha + \eta\right) \
& \leq \text{Pr}\left(
\sum_{t=1}^T (S_{t}(i^ ) - \hat{S}_{t}(i^ )) \geq \alpha \vee
\sum_{t=1}^T(\hat{S} {t}(i^*) - \hat{S} {t}(i_t)) \geq \eta \vee
\sum_{t=1}^T (\hat{S} {t}(i_t) - S {t}(i_t)) \geq \alpha\right) \
& \leq \text{Pr}\left(
\sum_{t=1}^T (S_{t}(i^ ) - \hat{S}_{t}(i^ )) \geq \alpha\right) \text{Pr}\left(\sum_{t=1}^T(\hat{S} {t}(i^*) - \hat{S} {t}(i_t)) \geq \eta\right) + \text{Pr}\left(\sum_{t=1}^T (\hat{S} {t}(i_t) - S {t}(i_t)) \geq \alpha\right) \
& \leq \exp\left(\frac{-\gamma^2\alpha^2}{2z^2T}\right) + 0 + \exp\left(\frac{-\gamma^2\alpha^2}{2z^2T}\right) \qquad \qquad \text{(Lemmas 3, 4 and Exp3 bound)}\
& \leq 2\exp\left(\frac{-\gamma^2\alpha^2}{2z^2T}\right)
\end{aligned}
$$
◻ In order to prove a bound on exploration steps in Theorem 1, we must first prove that the sum of sampling probabilities is not too high. A bound on sampling probabilities Lemma 6. If a learner selects arms i 1 , . . . i T and sampling probabilities b 1 , i 1 , . . . , b T , i T as described in Theorem 1, and furthermore, T ∑ t = 1 ( S t ( i ∗ ) − S t ( i t ) ) ≤ 2 α + η ) where η = 2 ( z + 1 ) γ √ ( e − 1 ) K ln ( K ) T and α > 0 , then, the sum of the sampling probabilities used is bounded by: T ∑ t = 1 b t , i t ≤ H z ( 2 α + η + T ) Proof of Lemma 6. First note that a best arm i ∗ must have non-negative total score on the surrogate problem: ∃ i ′ ∈ I s.t. ∀ t C t ( i ′ ) = 0 ∃ i ′ ∈ I s.t. ∀ t M t ( i ′ ) ≥ 0 ( R t ( i ′ ) ≥ 0 ) ∴ T ∑ t = 1 M ( i ∗ ) ≥ 0 ∴ T ∑ t = 1 S ( i ∗ ) ≥ 0 ( S t ( i ) ≥ M t ( i ) ) If ∑ T t = 1 ( S t ( i ∗ ) − S t ( i t ) ) ≤ 2 α + η , then: T ∑ t = 1 ( − S t ( i t ) ) ≤ 2 α + η T ∑ t = 1 ( − R t ( i t ) + z a t , i t ) ≤ − T + T ∑ t = 1 z a t , i t ≤ ∴ T ∑ t = 1 a t , i t ≤ 1 z ( 2 α + η + T ) T ∑ t = 1 ^ a t , i t H ≤ ∴ T ∑ t = 1 b t , i t ≤ H z ( 2 α + η + T ) where η = 2 ( z + 1 ) γ √ ( e − 1 ) K ln ( K ) T , and α > 0 . ◻ \section{Bounding the overall regret} Lemma 7. If a learner selects arms i 1 , . . . i T and sampling probabilities b 1 , i 1 , . . . , b T , i T as described in Theorem 1, and furthermore, T ∑ t = 1 ( S t ( i ∗ ) − S t ( i t ) ) ≤ 2 α + η ) where η = 2 ( z + 1 ) γ √ ( e − 1 ) K ln ( K ) T , and α > 0 , then regret will be bounded as: T ∑ t = 1 ( M t ( i ∗ ) − ( 1 − b t , i t ) M t ( i t ) ) ≤ 2 α + η + H z ( 2 α + η + T ) Proof of Lemma 7 If ∑ T t = 1 ( S t ( i ∗ ) − S t ( i t ) ) ≤ 2 α + η where η = 2 ( z + 1 ) γ √ ( e − 1 ) K ln ( K ) T , and α > 0 , then Lemma 6 gives us that: T ∑ t = 1 b t , i t ≤ H z ( 2 α + η + T ) ∴ T ∑ t = 1 b t , i t S t i t ≤ H z ( 2 α + η + T ) ∴ T ∑ t = 1 ( S t ( i ∗ ) − S t ( i t ) ) + T ∑ t = 1 b t , i t S t i t ≤ 2 α + η + H z ( 2 α + η + T ) T ∑ t = 1 ( S t ( i ∗ ) − ( 1 − b t , i t ) S t ( i t ) ) ≤ Using Lemma 2, we know that this bound on regret will give the learner a good net payoff: T ∑ t = 1 ( M t ( i ∗ ) − ( 1 − b t , i t ) M t ( i t ) ) ≤ 2 α + η + H z ( 2 α + η + T ) ◻ Completing the proof of Theorem 1 Proof of Theorem 1 For the learner to succeed, two things must happen. First, its sampling error must not cause too much regret. Second, it must not have too many exploration steps: Pr ( T ∑ t = 1 F t ≥ ζ + H z ( 2 α + η + T ) ∨ T ∑ t = 1 ( M t ( i ∗ ) − ( 1 − b t , i t ) M t ( i t ) ≥ 2 α + η + 2 α + η + T z ) ≤ Pr ( T ∑ t = 1 ( F t − b t , i t ) ≥ ζ ∨ T ∑ t = 1 b t , i t ≥ H z ( 2 α + η + T ) ∨ T ∑ t = 1 ( S t ( i ∗ ) − S t ( i t ) ≥ 2 α + η ) ≤ Pr ( T ∑ t = 1 ( F t − b t , i t ) ≥ ζ ∨ T ∑ t = 1 ( S t ( i ∗ ) − S t ( i t ) ≥ 2 α + η ) ( Lemma 6 ) ≤ Pr ( T ∑ t = 1 ( F t − b t , i t ) ≥ ζ ) + Pr ( T ∑ t = 1 ( S t ( i ∗ ) − S t ( i t ) ≥ 2 α + η ) ( Union bound ) From Lemma 5, we can bound the surrogate performance as: Pr ( ∑ T t = 1 ( S t ( i ∗ ) − S t ( i t ) ≥ 2 α + η ) ≤ 2 exp ( − γ 2 α 2 2 z 2 T ) .  Using Azuma's inequality, we can also bound Pr ( ∑ T t = 1 ( F t − b t , i t ) ≥ ζ ) , in order to complete the result. Since F t is an unbiased estimate of b t , i t , we have the Martingale: Z t = t ∑ t ′ = 1 ( F t ′ − b t ′ ) where | Z t − Z t − 1 | < 2 . By Azuma's inequality, we have Pr ( ∑ T t = 1 ( F t − b t , i t ) ≥ ζ ) ≤ exp ( − ζ 2 8 T ) , where ζ > 0 . So we obtain: Pr ( T ∑ t = 1 F t ≥ ζ + H z ( 2 α + η + T ) ∨ T ∑ t = 1 ( M t ( i ∗ ) − ( 1 − b t , i t ) M t ( i t ) ) ≥ 2 α + η + 2 α + η + T z ) ≤ 2 exp ( − γ 2 α 2 2 z 2 T ) + exp ( − ζ 2 8 T ) ◻ Achieving sublinear regret and sublinear exploration What remains is to appropriately set the learner's parameters to achieve sublinear exploration and regret. If we set the parameters to γ = T − 1 6 , z = T 1 6 , and the constants to α = √ − 2 log ( δ / 3 ) T 5 6 and ζ = 2 √ − 2 log ( δ / 3 ) T , we have η = 2 ν ( T 1 6 + 1 ) T 2 3 , and this yields an algorithm that will with ( 1 − δ ) probability achieve an error of less than ϵ where: ϵ = 2 √ − 2 log ( δ / 3 ) T 5 6 + 2 ν ( T 1 6 + 1 ) T 2 3 + 1 T 1 6 ( 2 √ − 2 log ( δ / 3 ) T 5 6 + 2 ν ( T 1 6 + 1 ) T 2 3 + T ) = ( 2 √ − 2 log ( δ / 3 ) + 2 ν + 1 ) T 5 6 + O ( T 2 3 ) = O ( ( √ log ( δ ) + √ K ln ( K ) ) T 5 6 ) and the number of exploration steps is: T ∑ t = 1 F t ≤ 2 √ − 2 log ( δ / 3 ) T + H T 1 6 ( 2 √ − 2 log ( δ / 3 ) T 5 6 + 2 ν ( T 1 6 + 1 ) T 2 3 + T ) = O ( √ K ln ( K ) T 5 6 ) That is to say that the regret and number of exploration steps will both be of order O ( T 5 6 ) with probability 1 − δ , and do not depend on the risk-tolerance, τ . Discussion The main aim of this post has been to develop a new model where a bandit algorithm can learn to avoid catastrophes. We have seen that a learner can avoid catastrophes by a process that includes switching between exploration and deployment steps. The modelling assumptions were that it can access overestimates ^ a t , i t of the ideal rate at which to sample for a catastrophe, such that these estimates are not overall too sensitive to nonserious catastrophic risks: ∑ T t = 1 ^ a t , i t ≤ H ∑ T t = 1 a t , i t , and that there is some arm that carries no catastrophic risk. These assumptions could have some difficulties in practice. Many AI systems can avoid causing catastrophes be remaining immobile or inert, but others such as self-driving cars and spy drones, do not have this luxury. Obtaining the estimates of catastrophe risk would also be very difficult. In general, a lot of data would be required, which might perhaps have to be labelled using simulations and/or by human operators. There is further work to be done in trying to relax some of these assumptions. Since this is just a proof of concept, the regret and exploration bounds are both of order T 5 6 , and we have left this bound very loose. Ultimately, the aim would be to achieve efficiency nearer to the order of T 2 3 in keeping with a similar class of games lacking "local observability" as described by Bartok et al [2]. We have some ideas about how to achieve this, and will post our results. References The bound on Exp3 is given in the discussion of Corrollary 4.2 on page 8-9 in Auer, Peter, et al. "Gambling in a rigged casino: The adversarial multi-armed bandit problem." Foundations of Computer Science, 1995. Proceedings., 36th Annual Symposium on. IEEE, 1995. See Bartók, Gábor, et al. "Partial monitoring-classification, regret bounds, and algorithms." Mathematics of Operations Research 39.4 (2014): 967-997.