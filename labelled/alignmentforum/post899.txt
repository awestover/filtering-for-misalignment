[Epistemic status: Hot take I wrote in 1 hour. We'll see in the comments how well it holds up.] [Update: OK, seems like people hate this. I guess it was probably too hot and sloppy in retrospect. I should have framed it as "People seem to have a prior that AGI is a grand challenge that's way more difficult than mundane AI tech like self-driving cars, but I don't think this is justified, I think people aren't thinking through the difficulties involved and are instead basically going AGI-is-exciting-therefore-difficult, robotaxis-are-less-exciting-therefore-easier."] Who would win in a race: AGI, or robotaxis? Which will be built first? There are two methods: Tech companies build AGI/robotaxis themselves. First they build AI that can massively accelerate AI R&D, then they bootstrap to AGI and/or robotaxis. The direct method Definitions: By AGI I mean a computer program that functions as a drop-in replacement for a human remote worker, except that it's better than the best humans at every important task (that can be done via remote workers). (h/t Ajeya Cotra for this language) And by robotaxis I mean at least a million fairly normal taxi rides a day are happening without any human watching ready to take over. (So e.g. if the Boring Company gets working at scale, that wouldn't count, since all those rides are in special tunnels.) 1. Scale advantage for AGI: Robotaxis are subject to crippling hardware constraints, relative to AGI. According to my rough estimations , Teslas would cost tens of thousands of dollars more per vehicle, and have 6% less range, if they scaled up the parameter count of their neural nets by 10x. Scaling up by 100x is completely out of the question for at least a decade, I'd guess. Meanwhile, scaling up GPT-4 is mostly a matter of purchasing the necessary GPUs and networking them together. It's challenging but it can be done, has been done, and will be done. We'll see about 2 OOMs of compute scale-up in the next four years, I say, and then more to come in the decade after that. This is a big deal because roughly half of AI progress historically came from scaling up compute, and because there are reasons to think it's impossible or almost-impossible for a neural net small enough to run on a Tesla to drive as well as a human, no matter how long it is trained. (It's about the size of an ant's brain. An ant is driving your car! Have you watched ants? They bump into things all the time!) 2. Stakes advantage for AGI: When a robotaxi messes up, there's a good chance someone will die. Robotaxi companies basically have to operate under the constraint that this never happens, or happens only once or twice. That would be like DeepMind training AlphaStar except that the whole training run gets shut down after the tenth game is lost. Robotaxi companies can compensate by doing lots of training in simulation, and doing lots of unsupervised learning on real-world camera recordings, but still. It's a big disadvantage. Moreover, the vast majority of tasks involved in being an AGI are 'forgiving' in the sense that it's OK to fail. If you send a weirdly worded message to a user, or make a typo in your code, it's OK, you can apologize and/or fix the error. Only in a few very rare cases are failures catastrophic. Whereas with robotaxis, the opportunity for catastrophic failure is omnipresent. As a result, I think arguably being a safe robotaxi is just inherently harder than most of of the tasks involved in being an AGI. (Analogy: Suppose that cars and people were indestructible, like in a video game, so that they just bounced off each other when they collided. Then I think we'd probably have robotaxis already; sure, it might take you 20% longer to get to your destination due to all the crashes, but it would be so much cheaper! Meanwhile, suppose that if your chatbot threatens or insults >10 users, you'd have to close down the project. Then Microsoft Bing would have been shut down, along with every other chatbot ever.) Finally, from a regulatory perspective, there are ironically much bigger barriers to building robotaxis than building AGI. If you want to deploy a fleet of a million robotaxis there is a lot of red tape you need to cut through, because the public and regulators are justifiably scared that you'll kill people. If you want to make AGI and give it the keys to your datacenter and connect it to the internet... you currently aren't even required to report this. In the future there will be red tape, but I cynically predict that it will remain less than what the robotaxis face. 3. No similarly massive advantage for robotaxis: Here's where I'm especially keen to see the comments. Maybe there are arguments I haven't thought of. Based on the small amount of thought I've put into it, there isn't any advantage for robotaxis that is similarly massive to the two advantages for AGI described above. The best I can do is this: Suppose that being a good robotaxi involves being good at N skills. Probably, being a good AGI involves being good at M skills, where M>>N. After all, human remote workers can do so many different things! Whereas driving a car is just one thing, or maybe a few things, depending on how you count... So there are probably at least a few skills necessary for AGI that are harder than all the skills necessary for robotaxis, so even if most AGI-skills are easier (due to being lower-stakes or whatever) to actually get AGI will be harder. My reply to this argument is: OK, but I'd like to think this through more, I'm not confident in it yet. More importantly, by the time we are automating most of the skills involved in AGI, plausibly we'll be getting some serious AI R&D acceleration, and that moves us into the next section of this post... The indirect method One way we could get AGI and/or robotaxis is by automating most or all of the tasks involved in AI R&D, massively accelerating AI R&D, and then using the awesome power of all those newer better AIs and AI training methods and so forth to very quickly build AGI and/or robotaxis. I think this is the default path, in fact. The tasks involved in AI R&D are already starting to get automated a little bit (e.g. ChatGPT and copilot are speeding up coding) and whereas in the abstract I sorta bought the argument that there have got to be some tasks involved in AGI that are harder than driving cars safely, when I focus more narrowly on the tasks involved in AI R&D, none of them seem harder than driving cars safely. Maybe I'm wrong here -- maybe concept formation or coming up with novel insights or understanding ML papers is inherently a lot harder than driving cars? Maybe. I would have been a lot more sympathetic to this four years ago, before AIs learned common sense and started commenting intelligently on ML papers and producing lots of useful code. If we go via this indirect path, whether robotaxis or AGI come first depends heavily on whether the powers that be decide to direct all that super-advanced post-singularity AI research power to make robotaxis, or AGI, first. Here I think it's pretty plausible that the answer will be "AGI." For one thing, there'll plausibly be more red tape and physical constraints on robotaxis. For another, there'll be so much more incentive to make AGI than make robotaxis, that probably the company that has successfully automated AI R&D will want to make AGI next instead of robotaxis.