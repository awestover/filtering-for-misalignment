A putative new idea for AI control; index here . NOTE : What used to be called 'bias', is now called 'rigging', because 'bias' is very overloaded. The post has not yet been updated with the new terminology, however. What are the biggest failure modes of reward learning agents ? The first failure mode is when the agent directly (or indirectly) chooses its reward function. For instance, imagine a domestic robot that can be motivated to tidy (reward R 0 ) or cook (reward R 1 ). It has a switch that allows the human to choose the correct reward function. However, cooking gives a higher expected reward than tidying, and the agent may choose to set the switch directly (or manipulate the human's choice). In that case, it will set it to `cook'. In that case, the agent biases its reward learning process. A second failure mode (this version due to Jessica, original idea here ) is when the agent influences its reward function without biasing it. For example, the domestic robot might be waiting for the human to arrive in an hour's time. It expected the human will be 50% likely to choose R 0 (tidying) versus 50% likely to choose R 1 (cooking). If instead the robot can randomise its reward switch now (with equal odds on R 0 and R 1 ), it can know its reward function early, and get in a full extra hour of tidying/cooking. A subsequent post will formalise influence, here let's look at bias. Formalising bias We can define bias in terms of P and ˆ P . First of all, for a given policy π , we can say that ˆ P is unbiased for π , if π preserves the expectation of ˆ P . That is: For all histories h t with t < m , ˆ P ( ⋅ ∣ h t ) = E π μ [ ˆ P ( ⋅ ∣ h t + 1 ) ∣ h t ] . If the expectation of ˆ P is preserved by any policy, then we can say that ˆ P itself is unbiased: The prior ˆ P is unbiased is ˆ P is unbiased for π for all policies π . Recall that ˆ P = P on histories of length m . So ˆ P being unbiased implies restrictions on P : If ˆ P is unbiased, then for all h t with t < m and for all policies π , ˆ P ( ⋅ ∣ h t ) = E π μ [ P ( ⋅ ∣ h m ) ∣ h t ] . Since ˆ P being unbiased imposes restrictions on P , we can directly define: The posterior P is unbiased if there exists a possible prior ˆ P ′ with ˆ P ′ = P on histories of length m , and ˆ P ′ is unbiased. So what does unbiased mean in practice? It simply means that whatever actions or policies the agent follows, they cannot change the expectation of their values. Bias and learning incentives This is an opportunity to put the learning and biasing graph: The x-axis represents the probability ˆ P ( R 1 ∣ h t ) of R 1 being the `correct' reward function. The current value is ˆ P ( R 1 ∣ h t ) = p . The orange curve (which is always convex, though not necessarily strictly so) represents, for a given probability q of correctness of R 1 , the expected value the agent could get if it knew it would never learn anything more about the correct value. If it learnt immediately and costlessly about the correct values, it would go to q = 0 or q = 1 with probability 1 − p and p , respectively. Thus its expected reward is the point on the blue curve at the x-coordinate p . Thus the green arrow represents the incentive to learn . But, if it can't learn easily, it may try and randomise its reward function, so the green arrow also represents the incentive to (unbiased) influence . The shape of the orange curve itself represents the incentive to bias . If the orange curve is flat , it is equal to the blue one, so there is no incentive to learn. If the orange curve is flat and horizontal , there is no incentive to bias, either.