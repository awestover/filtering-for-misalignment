OpenAI is currently charging 100,000 times less per line of code than professional US devs. [1] An LLM's code output is of course less reliable than a professional's. And it is hard to use a text-completion API effectively in large projects. What should you do if you've got a model on  your hands that solves those problems? You could operate as a software development company.  They tend [2] to charge $100-200k for simple mobile apps and there's basically no ceiling on the cost for complex apps over their lifetime. Devs make up the majority of a normal firm's personnel and costs; coding takes most of the app development time; bugs in code are one of the primary sources of project extension and failures. By using  your model you can make better software, complete it faster, succeed more often, charge a lower price, and make a higher profit. Going further, if you've really got a good model, then you can do very well by building competitors to adobe products, salesforce products, SAP products, google search, mongodb, etc. Someone who has a build-anything machine would be a fool to sell a cheap build-anything service instead of using it themselves and selling the result. Particularly because selling the general service directly is likely to encourage and inspire copycats, including open-source ones who will delete your market. If it really builds the entire thing then you'll probably also be liable for negative consequences, which again have no ceiling. Fewer risks, big and small Some common misuse risks you can avoid/reduce (and eliminate associated liability): Someone tricks your API into doing something awful and pastes it into a tweet Spam generation for political campaigns, cryptocurrencies, etc Common hacking ("write a test to see if my server has a log4j vulnerability") Targeted manipulation and spearphishing Larger risks you can avoid/reduce: Your incredible model motivates countless AI researchers. People reverse-engineer some of the architecture in online discussions. The state of the art is quickly advanced. We have less time to prepare for strong general AI. Hackers steal your model weights (if you don't advertise your model then you'll attract less attention from hackers) People try to get your model to act like an agent and copy itself around. They succeed. You have no way of shutting it down or monitoring what it is doing. Someone tries to get your model to order and mail smallpox or a novel virus. The screenshot would be an epic tweet. They succeed oh no Your own AI devs' ambitions and risk-tolerance know no bounds because you've positioned yourself as an AI company instead of a product company; there is nothing to keep their hands busy except make the AI more generally capable and efficient. They are careless with the training runs and one day your model gets loose and wreaks havoc. Biology, robotics, R&D, etc The benefits of selling/publishing derived products and the downsides of offering direct access remain in other domains: A drug is more profitable and less risky (for the world at least) than a general drug designer A vaccine is more profitable and less risky  than a general mRNA designer There's more people who want to buy a house than a house-building robot There's more people who need a (highly efficient, AI assisted) lawyer than a general lawyer's assistant. More people need a cleaning robot than a robot-maker Releasing or building an effective fusion power generator gets you more clout than releasing the design assistant Even if you're evil and want to make AI-astroturf campaign spam, you presumably want to help one side more than the other, but if you release your model/tooling then both sides will use it. If you have a mathomatic it would be pretty epic to slowly release proofs for millennium problems for a while before revealing it was the mathomatic all along. Would be epic to release your unified theory of physics and wait a bit to reveal it was the physicsomatic all along. A factory optimization consultancy / management company would make more money than a factory optimization software package. There's more customers for long-lived dogs than a live-long-gene-editor. More customers for a livelong injection than the injection designer. If your hackomatic can edit Chase balances without a trace then you should just edit your own, not sell it Conclusion Whether you're a startup, a big commercial lab, an enormous company, a research lab in a university, an independent AI researcher, or a criminal — whatever domain you're working in — whatever your goals — if you possess a uniquely powerful model then you'll likely have greater rewards and fewer risks by putting its products into the world instead of the model itself. A particularly speedy software dev might type 400 lines of  working code in 8 hours. If they cost $100/hour that's $2/line. GPT3.5-turbo costs $0.002 per 1000 tokens, and 40 characters/line ≈ 10 tokens/line = $0.00002 / line. ↩︎ "The actual costs are much higher with a median total app development cost of $171,450." And the GoodFirms article they quote actually has numbers 3x higher than quoted, in the 100-200k range. ↩︎