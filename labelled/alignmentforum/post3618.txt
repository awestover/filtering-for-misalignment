See comments. This is a rediscovery of a result from the 1980's that allow concluding ϕ from □ n ( ϕ ) via a O ( n ) -length proof, and even the statement that the theory has no disproof of length n or less has a single O ( n ) -length proof. This is not vulnerable to Critch's Bounded Parametric Lob proof, and was created by looking for ways to make it fail. This result is just an idea developed very recently, and I'd put ~2:1 odds on it having a fatal flaw, but it looks extremely promising if it works out. EDIT: It works. None of the proof theory checks have been done yet, but it does causes both Lob's theorem, and Critch's Bounded Parametric Lob result to fail. So, to begin with, if a theory thinks it is sound, then it is inconsistent. Proof by Lob's theorem. ⊢ □ ⊥ → ⊥ ⇒ ⊢ ⊥ Well that didn't work. What if we give the theory a soundness schema over any proof which is of bounded length? Maybe the "there exists a proof" in the standard provability predicate is causing problems. Well then Critch's Bounded Parametric Lob comes in to ruin our day. The entire proof will be reproduced below. Let g ( k ) , f ( k ) , and h ( k ) be such that f ( k ) ≥ g ( k ) + h ( k ) + log ( k ) , E g ( k ) < h ( k ) , and log ( f ( k ) ) < g ( k ) , asymptotically. As a specific example, this can be done by g ( k ) = k , h ( k ) = k 2 , and f ( k ) = k 3 . If it takes a constant number of steps to derive a specific proof regardless of k , the number on it will be suppressed for readability. Also, technically, the original proof has O log ( k ) instead of log ( k ) , but this change doesn't alter much. G ( ⌈ ψ ⌉ , k ) : = □ g ( k ) ψ ( k ) → ⊥ ⊢ ∀ k : ψ ( k ) ↔ G ( ⌈ ψ ⌉ , k ) (Parametric Diagonal Lemma) ⊢ □ ∀ k : ψ ( k ) ↔ G ( ⌈ ψ ⌉ , k ) (Bounded Necessitation) ⊢ ∀ k : □ log ( k ) ( ψ ( k ) → G ( ⌈ ψ ⌉ , k ) ) (Quantifier Distribution) ⊢ ∀ k , a : □ a ψ ( k ) → □ a + log ( k ) G ( ⌈ ψ ⌉ , k ) (Implication Distribution) ⊢ ∀ k , a , b : □ a ψ ( k ) → ( □ b □ g ( k ) ψ ( k ) → □ a + b + log ( k ) ⊥ ) (Implication Distribution)
Now specialize to a=g(k), b=h(k). Also, f ( k ) ≥ g ( k ) + h ( k ) + log ( k ) for sufficiently large k above k 1 . ⊢ ∀ k > k 1 : □ g ( k ) ψ ( k ) → ( □ h ( k ) □ g ( k ) ψ ( k ) → □ f ( k ) ⊥ ) ⊢ ∀ k , a : □ a ψ ( k ) → □ E a □ a ψ ( k ) (Bounded Inner Necessitation)
Now, Specializing to a=g(k), we get ⊢ ∀ k : □ g ( k ) ψ ( k ) → □ E g ( k ) □ g ( k ) ψ ( k ) Now, since E g ( k ) < h ( k ) after some time k 2 , ⊢ ∀ k > k 2 : □ g ( k ) ψ ( k ) → □ f ( k ) ⊥ Pick a specific value of k, k ′ , which is sufficiently large. ⊢ □ g ( k ′ ) ψ ( k ′ ) → □ f ( k ′ ) ⊥ By the soundness schema, □ f ( k ′ ) ⊥ → ⊥ . The length of this proof isn't constant, because f ( k ′ ) might be really big, so then it'd take about log ( f ( k ′ ) ) characters to write down the single application of the soundness schema. ⊢ log ( f ( k ′ ) ) □ g ( k ′ ) ψ ( k ′ ) → ⊥ ⊢ log ( f ( k ′ ) ) ψ ( k ′ ) (By the definition of ψ ( k ′ ) ) ⊢ E log ( f ( k ′ ) ) □ log ( f ( k ′ ) ) ψ ( k ′ ) log ( f ( k ) ) < g ( k ) eventually. Since k ′ was previously selected to be sufficiently big, ⊢ E log ( f ( k ′ ) ) □ g ( k ′ ) ψ ( k ′ ) Now we no longer care about log ( f ( k ′ ) ) 's size, because k ′ has been fixed, so ⊢ ⊥ However, not all is lost. If you look carefully at this, you see that the introduction of the soundness scheme lead to a minor proof blowup. Sure, it's not enough of a blowup to surpass g ( k ) , so the proof of ⊥ still goes through, but this seems like it might be exploitable.... So then the next step is to make sure that □ n ϕ → ϕ can only ever be proved by a proof of n steps or more. The agent can conclude its own soundness for bounded proofs, but it may take a while. I'm pretty sure this is doable by having an axiom schema of the form □ n ϕ → □ n − 1 ϕ for each individual n and ϕ seperately, but I'm not entirely sure of that. EDIT: Doesn't work, see comments. Regardless, assume that any proof of □ n ϕ → ϕ via iterated soundness axioms will always take c or more steps. EDIT: You don't need to assume this, there's an explicit O ( n ) proof of that statement. Then, if we go through the proof again, something interesting happens. Instead of log ( f ( k ) ) making its way to the length of the proof, we get f ( k ) (or more). f ( k ) ≥ g ( k ) in order to get an earlier step of the proof to go through, but then the resulting proof of ψ ( k ) takes at least f ( k ) steps to work, so that proof cannot be used with the definition of ψ ( k ) to conclude ⊥ . I'd suspect there's some more subtle argument that can conclude inconsistency, but breaking the proof of Lob's theorem is promising. What's the use of this, though, if it doesn't shorten proofs? Well, there's a lot of n -length proofs, but the "royal road" of abstractly establishing soundness or consistency would allow concluding the sentence directly without having to embark on an exhaustive search for the original proof. If you spent a while proving something, and then wrote down the result in your notebook, and forgot about it, then, upon observing the notebook page, you can conclude □ ϕ and, since you can bound how good you are at math, you can establish an upper bound on the length of the proof, □ n ϕ . This provides a way to establish ϕ without having to reprove the thing from scratch, by just thinking for a while about "Do I trust my own bounded proofs? Yes I do." This solves the Notebook Problem in Vingean Reflection.