This is the fourth post in the Cartesian frames sequence. Read the first post here . Previously, we defined controllables as the sets of possible worlds an agent can both ensure and prevent, and we defined observables as the sets of possible worlds such that the agent can implement all conditional policies. Now that we have built up more language, we can redefine controllables and observables more categorically. 1. Controllables 1.1. Ensurables and Preventables The categorical definition of ensurables is very simple. Definition: Ensure ( C ) is the set of all S ⊆ W such that there exists a morphism ϕ : 1 S → C . As an example, let C 0 = ( A , E , ⋅ ) . Recall that 1 S = ( { b } , S , ⋆ ) , where b ⋆ s = s for all s ∈ S . E.g., if S 0 = { w 0 , w 3 , w 4 } , then 1 S 0 = w 0 w 3 w 4 b ( w 0 w 3 w 4 ) . If there is a morphism ( g , h ) from 1 S 0 to C 0 , this means that: There is a function g from 1 S 0 's agent { b } to C 0 's agent A , i.e., a function that always outputs a specific a ∈ A . There is a function h from C 0 's environment E to 1 S 0 's environment S 0 . The specific a ∈ A picked out by g exactly implements that function h : E → S 0 . That function h : E → S 0 is exactly like the function you get by looking at that row, so a morphism ( g , h ) : 1 S 0 → C 0 is like a row in C 0 that is entirely contained in S 0 . If there are multiple such rows, then there will be multiple distinct morphisms 1 S 0 → C 0 picking out different a ∈ A . In " Biextensional Equivalence ," we noted that 1 S is like a passive observer who has a promise from the environment that the world will be in S . The existence of a morphism 1 S → C means that there's an interface that allows a powerless bystander who has been promised S to play C 's game. Since Agent ( 1 S ) only has one option, this interface must send that one option to some option for C 's agent that is compatible with this promise. Claim: This definition is equivalent to the one in " Introduction to Cartesian Frames ": Ensure ( C ) = { S ⊆ W | ∃ a ∈ A , ∀ e ∈ E , a ⋅ e ∈ S } . Proof: Let C = ( A , E , ⋅ ) and let 1 S = ( { b } , S , ⋆ ) , where b ⋆ s = s for all s ∈ S . First, assume there exists a morphism ( g , h ) : 1 S → C . Here, g : { b } → A and h : E → S . Consider the element g ( b ) ∈ A . It suffices to show that g ( b ) ⋅ e ∈ S for all e ∈ E . Indeed, g ( b ) ⋅ e = b ⋆ h ( e ) ∈ S . Conversely, assume that there exists an a ∈ A , such that a ⋅ e ∈ S for all e ∈ E . Then, there is a morphism ( g , h ) : 1 S → C given by g ( b ) = a , and h ( e ) = a ⋅ e . This is a morphism because g ( b ) ⋅ e = a ⋅ e = h ( e ) = b ⋆ h ( e ) for all b ∈ { b } and e ∈ E . □ Definition: Prevent ( C ) is the set of all S ⊆ W such that there exists a morphism ϕ 1 : 1 W ∖ S → C . Claim: This definition is equivalent to the one in " Introduction to Cartesian Frames ": Prevent ( C ) = { S ⊆ W | ∃ a ∈ A , ∀ e ∈ E , a ⋅ e ∉ S } . Proof: This follows from the proof for Ensure ( C ) , substituting W ∖ S for S . □ Our categorical definition gives us a bunch of facts about how ensurability interacts with various operations on Cartesian frames. First, ensurability is monotonic in the existence of morphisms. Claim: If there exists a morphism ϕ : C → D , then Ensure ( C ) ⊆ Ensure ( D ) . Proof: If S ∈ Ensure ( C ) , there exists a morphism ψ : 1 S → C , so we have ϕ ∘ ψ : 1 S → D , so S ∈ Ensure ( D ) . □ This fact justifies our interpretation of the existence of a morphism from C to D as saying that " D is at least as strong as C ." We also have that ensurables interact very strongly with sums and products. The ensurables of a product are the intersection of the original two agents' ensurables, and the ensurables of a sum are (usually) the union of the original two agents' ensurables. This makes sense when we think of C ⊕ D as "there are two games, and the agent gets to choose which one we play," and C & D as "there are two games, and the environment gets to choose which one we play." The agent of C ⊕ D can make sure something happens if either C or D's agent could, whereas the agent of C & D can only ensure things that are ensurable across both games. Claim: Ensure ( C & D ) = Ensure ( C ) ∩ Ensure ( D ) . Proof: Since & is a categorical product, if there exists a morphism from 1 S to C and a morphism from 1 S to D , there must exist a morphism from 1 S to C & D . Thus Ensure ( C & D ) ⊇ Ensure ( C ) ∩ Ensure ( D ) . Conversely, since & is a categorical product, there exist projection morphisms from C & D to C and from C & D to D , so Ensure ( C & D ) ⊆ Ensure ( C ) ∩ Ensure ( D ) . □ Claim: If C ≠ null and D ≠ null , then Ensure ( C ⊕ D ) = Ensure ( C ) ∪ Ensure ( D ) . Proof: Let C = ( A , E , ⋅ ) , and let D = ( B , F , ⋆ ) . Since C is not null , if E were empty, then A would have to be nonempty, and Ensure ( C ) would be the full set 2 W . C ⊕ D would also have empty environment and nonempty agent, and so Ensure ( C ⊕ D ) would also be the full set 2 W . Thus, we are done in the case where E is empty. Similarly, we are done in the case where F is empty. Assume E and F are nonempty. It is clear that Ensure ( C ⊕ D ) ⊇ Ensure ( C ) ∪ Ensure ( D ) because C ⊕ D is a coproduct, so there are canonical injection morphisms from C to C ⊕ D and from D to C ⊕ D . Conversely, if S ∈ Ensure ( C ⊕ D ) , then there is a morphism ( g , h ) : 1 S → C ⊕ D . Since g : Agent ( 1 S ) → A ⊔ B , and Agent ( 1 S ) = { b ′ } is a singleton, the image of g must be entirely in A or in B . Without loss of generality, assume it is in A . Then, let f be any element of F . There is a morphism ( g ′ , h ′ ) : 1 S → C given by g ′ ( b ′ ) = g ( b ′ ) , and h ′ ( e ) = h ( e , f ) . This is a morphism because b ′ ⋄ h ′ ( e ) = b ′ ⋄ h ( e , f ) = g ( b ′ ) ∙ ( e , f ) = g ′ ( b ′ ) ⋅ e , where ⋄ = Eval ( 1 S ) and ∙ = Eval ( C ⊕ D ) . Thus, S ∈ Ensure ( C ) . □ The condition that C and D are not null is annoying. It is also not very informative. It is reasonable to just think of null as not a real Cartesian frame, and not worry about it. To see what concretely goes wrong, let C = ( { a } , { e } , ⋅ ) , where a ⋅ e = w , and let D = null . Ensure ( C ) = ⟨ { w } ⟩ ⊇ and Ensure ( D ) = { } . However, C ⊕ D = ( { a } , { } , ⋆ ) , so Ensure ( C ⊕ D ) = 2 W , since the a ensures everything. The null brought us into the degenerate case where there are no possible environments, but since it had no possible agents, it had no ensurables until it was combined with C . We also have that ensurables are preserved by biextensional equivalence. Claim: If C ≃ D , Ensure ( C ) = Ensure ( D ) . Proof: From the homotopy equivalence definition , we have that if C ≃ D , there exist morphisms from C to D and vice versa. □ Finally, we have that there is a tradeoff between a Cartesian frame's ability to ensure things and its dual's ability to prevent things. Claim: Ensure ( C ) ∩ Prevent ( C ∗ ) = { } . Proof: Trivial. □ 1.2. Controllables Controllables also have a simple categorical definition. Definition: Let 2 S denote the Cartesian frame 1 S ⊕ 1 W ∖ S . Again, C ⊕ D represents a game where the agent chooses whether to play C or D , and the environment must be able to respond in either case. While 1 S has one possible agent, 2 S has two possible agents, representing the choice between S and W ∖ S . 2 S 's environments are all possible pairs of exactly one s ∈ S and exactly one s ∈ W ∖ S . For example, if S 0 = { w 0 , w 3 , w 4 } (as in our earlier example of a 1 S ) and W = { w 0 , w 1 , w 2 , w 3 , w 4 } , then 2 S 0 = w 0 w 1 w 0 w 2 w 3 w 1 w 3 w 2 w 4 w 1 w 4 w 2 b S 0 b W ∖ S 0 ( w 0 w 0 w 3 w 3 w 4 w 4 w 1 w 2 w 1 w 2 w 1 w 2 ) . So the agent decides whether we're in S , and the environment picks a strategy for S and another for the complement of S . Definition: Ctrl ( C ) is the set of all S ⊆ W such that there exists a morphism ϕ : 2 S → C . Claim: This definition is equivalent to the one in " Introduction to Cartesian Frames ": Ctrl ( C ) = Ensure ( C ) ∩ Prevent ( C ) . Proof: Since ⊕ is the categorical coproduct, there exists a morphism from 2 S = 1 S ⊕ 1 W ∖ S to C if and only if there exist a pair of morphisms ϕ 0 : 1 S → C and ϕ 1 : 1 W ∖ S → C , which by the above definitions of ensurables and preventables is true if and only if S is in both Ensure ( C ) and Prevent ( C ) . □ Since Ctrl ( C ) is the set of all S ⊆ W with both S and W ∖ S in Ensure ( C ) , we immediately have that the following closure properties on ensurables also apply to controllables. Claim: If there exists a morphism ϕ : C → D , then Ctrl(C) ⊆ Ctrl ( D ) . Proof: Trivial. □ Claim: Ctrl ( C & D ) = Ctrl ( C ) ∩ Ctrl ( D ) . Proof: Trivial. □ Claim: If C ≃ D , then Ctrl ( C ) = Ctrl ( D ) . Proof: Trivial. □ Note that although Ensure ( C ⊕ D ) = Ensure ( C ) ∪ Ensure ( D ) is usually true, there isn't a corresponding result for controllables. 2. Observables We also have a new definition of observables, but it is not nearly as trivial as the definition of controllables. Definition: Obs ( C ) is the set of all S ⊆ W such that there exist C 0 and C 1 with Image ( C 0 ) ⊆ S and Image ( C 1 ) ⊆ W ∖ S such that C ≃ C 0 & C 1 . Claim: This definition is equivalent to the one in " Introduction to Cartesian Frames ": Obs ( C ) = { S ⊆ W | ∀ a 0 , a 1 ∈ A , ∃ a ∈ A , a ∈ if ( S , a 0 , a 1 ) } . Proof: Throughout the proof, we will let Obs o l d ( − ) refer to observables as they were originally defined, and let Obs ( − ) refer to observables under our categorical definition. The proof will be broken into three parts: First, we will show that Obs o l d ( − ) is closed under biextensional equivalence. Second, we will show that if Image ( C 0 ) ⊆ S and Image ( C 1 ) ⊆ W ∖ S , then S ∈ Obs o l d ( C 0 & C 1 ) . In combination with the first part, this implies that Obs ( C ) ⊆ Obs o l d ( C ) . Third, we will show that if S ∈ Obs o l d ( A , E , ⋅ ) , then ( A , E , ⋅ ) ≃ ( A , E S , ⋅ ) & ( A , E W ∖ S , ⋅ ) . This gives us that Obs o l d ( C ) ⊆ Obs ( C ) , by taking C 0 = ( A , E S , ⋅ ) and C 1 = ( A , E W ∖ S , ⋅ ) . Part 1. We want to show that Obs o l d ( − ) is closed under biextensional equivalence. Let C = ( A , E , ⋅ ) , let D = ( B , F , ⋆ ) , and let C ≃ D . We will use the homotopy equivalence definition, so let ( g 0 , h 0 ) : C → D and ( g 1 , h 1 ) : D → C be such that ( g 0 , h 0 ) ∘ ( g 1 , h 1 ) and ( g 1 , h 1 ) ∘ ( g 0 , h 0 ) are both homotopic to the identity. Given S ∈ Obs o l d ( C ) , we want to show that S ∈ Obs o l d ( D ) . Given b 0 , b 1 ∈ B , we want to show that there exists a b ∈ B such that for all f ∈ F , if b ⋆ f ∈ S , then b ⋆ f = b 0 ⋆ f , and otherwise b ⋆ f = b 1 ⋆ f . Letting a i = g 1 ( b i ) , the fact that S ∈ Obs o l d ( C ) gives that there exists an a ∈ A , such that for all e ∈ E , if a ⋅ e ∈ S , then a ⋅ e = a 0 ⋅ e , and otherwise, a ⋅ e = a 1 ⋅ e . We will take b = g 0 ( a ) . For all f ∈ F , we have that b ⋆ f = g 0 ( a ) ⋆ f = a ⋅ h 0 ( f ) . Further, since ( g 0 , h 0 ) ∘ ( g 1 , h 1 ) is homotopic to the identity, we also have that for all f ∈ F , b i ⋆ f = g 0 ( g 1 ( b i ) ) ⋆ f = g 1 ( b i ) ⋅ h 0 ( f ) = a i ⋅ h 0 ( f ) . Together these give that if b ⋆ f ∈ S , then a ⋅ h 0 ( f ) ∈ S , so b ⋆ f = a ⋅ h 0 ( f ) = a 0 ⋅ h 0 ( f ) = b 0 ⋆ f , and if b ⋆ f ∉ S , then a ⋅ h 0 ( f ) ∉ S , so b ⋆ f = a ⋅ h 0 ( f ) = a 1 ⋅ h 0 ( f ) = b 1 ⋆ f . Thus S ∈ Obs o l d ( D ) , so Obs o l d ( − ) is closed under biextensional equivalence. Part 2. We want to show that if Image ( C 0 ) ⊆ S and Image ( C 1 ) ⊆ W ∖ S , then S ∈ Obs o l d ( C 0 & C 1 ) . Let C 0 = ( A , E , ⋅ ) , let C 1 = ( B , F , ⋆ ) , and let C 0 & C 1 = ( A × B , E ⊔ F , ⋄ ) . Given ( a 0 , b 0 ) , ( a 1 , b 1 ) ∈ A × B , we want to show that there exists an ( a , b ) ∈ A × B such that if ( a , b ) ⋄ e ∈ S , then ( a , b ) ⋄ e = ( a 0 , b 0 ) ⋄ e , and otherwise ( a , b ) ⋄ e = ( a 1 , b 1 ) ⋄ e . We will take ( a , b ) = ( a 0 , b 1 ) . For all f ∈ F , ( a 0 , b 1 ) ⋄ f = b 1 ⋆ f ∉ S , since Image ( C 1 ) ⊆ W ∖ S . Thus, if ( a 0 , b 1 ) ⋄ e ∈ S , then e ∈ E , so ( a 0 , b 1 ) ⋄ e = a 0 ⋅ e = ( a 0 , b 0 ) ⋄ e . Similarly, if ( a 0 , b 1 ) ⋄ e ∉ S , then e ∈ F , so ( a 0 , b 1 ) ⋄ e = b 1 ⋅ e = ( a 1 , b 1 ) ⋄ e . Thus, S ∈ Obs o l d ( C 0 & C 1 ) . Part 3. We want to show that if S ∈ Obs o l d ( A , E , ⋅ ) , then ( A , E , ⋅ ) ≃ ( A , E S , ⋅ ) & ( A , E W ∖ S , ⋅ ) . Let C = ( A , E , ⋅ ) , let C 0 = ( A , E S , ⋅ ) , and let C 1 = ( A , E W ∖ S , ⋅ ) . (Here the ⋅ in C 0 and C 1 is the restriction of ⋅ in C to the respective domain.) Let ⋆ = Eval ( C 0 & C 1 ) . First, let's quickly deal with the degenerate case where A is empty. In this case E S = E W ∖ S = E . If E is also empty, then C ≃ null ≃ null & null ≃ C 0 & C 1 . If E is nonempty, then C ≃ 0 ≃ 0 & 0 ≃ C 0 & C 1 . Thus, we can restrict our attention to the case where A is nonempty. Note that in this case, E S and E W ∖ S are disjoint, and as we saw before they cover E , so E = E S ⊔ E W ∖ S . We need to construct a ( g 0 , h 0 ) : C → C 0 & C 1 and a ( g 1 , h 1 ) : C 0 & C 1 → C , which compose to something homotopic to the identity in both orders. Since E = E S ⊔ E W ∖ S , we can just take h 0 and h 1 to be the identity on E . We will take g 0 : A → A × A to be the diagonal given by g 0 ( a ) = ( a , a ) . Finally, for g 1 : A × A → A , we will use the fact that S ∈ Obs o l d ( C ) . We will let g 1 ( a 0 , a 1 ) be chosen such that g 1 ( a 0 , a 1 ) ⋅ e = a 0 ⋅ e if g 1 ( a 0 , a 1 ) ⋅ e ∈ S , and g 1 ( a 0 , a 1 ) ⋅ e = a 1 ⋅ e otherwise. We can always choose such a g 1 ( a 0 , a 1 ) , by the definition of Obs o l d ( C ) . To see that ( g 0 , h 0 ) is a morphism, observe that for all a ∈ A and e ∈ E S ⊔ E W ∖ S , we have g 0 ( a ) ⋆ e = ( a , a ) ⋆ e = a ⋅ e = a ⋅ h 0 ( e ) , regardless of which half e is in. To see that ( g 1 , h 1 ) is a morphism, observe that for all ( a 0 , a 1 ) ∈ A × A and e ∈ E , if e ∈ E S , then g 1 ( a 0 , a 1 ) ⋅ e = a 0 ⋅ e = ( a 0 , a 1 ) ⋆ e = ( a 0 , a 1 ) ⋆ h 1 ( e ) , while if e ∈ E W ∖ S , then g 1 ( a 0 , a 1 ) ⋅ e = a 1 ⋅ e = ( a 0 , a 1 ) ⋆ e = ( a 0 , a 1 ) ⋆ h 1 ( e ) . Finally, the fact that ( g 0 , h 0 ) and ( g 1 , h 1 ) compose to something homotopic to the identity in both orders is trivial, since h 0 ∘ h 1 and h 1 ∘ h 0 are both the identity, so trivially a ⋅ e = a ⋅ h 0 ( h 1 ( e ) ) , and ( a 0 , a 1 ) ⋆ e = ( a 0 , a 1 ) ⋆ h 1 ( h 0 ( e ) ) . (Technically, this is verifying that the identity is homotopic each composition, but since being homotopic is symmetric, this is fine.) Putting it together. If S ∈ Obs ( C ) , then C ≃ C 0 & C 1 , where Image ( C 0 ) ⊆ S and Image ( C 1 ) ⊆ W ∖ S . By part 2, S ∈ Obs o l d ( C 0 & C 1 ) , which by part 1, means that S ∈ Obs o l d ( C ) . Conversely, if S ∈ Obs o l d ( A , E , ⋅ ) , then by part 3, ( A , E , ⋅ ) ≃ ( A , E S , ⋅ ) & ( A , E W ∖ S , ⋅ ) , which since Image ( A , E S , ⋅ ) ⊆ S and Image ( A , E W ∖ S , ⋅ ) ⊆ W ∖ S , implies that S ∈ Obs ( A , E , ⋅ ) . □ Note that from the above proof, if S ∈ Obs ( C ) , we know how to construct the C 0 and C 1 such that C ≃ C 0 & C 1 . In particular, every column of C must be entirely contained in S or entirely outside of S , and C 0 just takes the subset of columns in S while C 1 takes the subset of columns outside of S . One thing to like about this new definition is that it shows that when an agent can observe S , you can actually break it up into two different agents. The first agent chooses how to behave in worlds in S and is promised that the world will in fact be in S , and the second does the same for the worlds not in S . These two agents combine using & to form the original agent. Observables are much less well-behaved than controllables, so there is much less to say about them at this point. We do have that observability is preserved under biextensional equivalence, which is trivial under the new definition and was proven within the previous proof for the old definition. Claim: If C ≃ D , then Obs ( C ) = Obs ( D ) . Proof: Trivial. □ 3. Controllables and Observables Are Still Disjoint To become more used to our new definitions, let us reprove the incompatibility theorems from before. First, a lemma. Lemma: Let C ≃ C 0 & C 1 , with Image ( C 0 ) ⊆ S and Image ( C 1 ) ⊆ W ∖ S . If S ∈ Ensure ( C ) , then C 1 ≃ ⊤ . If S ∈ Prevent ( C ) , then C 0 ≃ ⊤ . Proof: If S ∈ Ensure ( C ) , there exists a morphism from 1 S to C , so there exists a morphism from 1 S to C 0 & C 1 . Composing this with the canonical projection from C 0 & C 1 to C 1 gives a morphism ( g , h ) : 1 S → C 1 . Let C 1 = ( A , E , ⋅ ) , and let 1 S = ( { b } , S , ⋆ ) . If there were an e ∈ E , then g ( b ) ⋅ e = b ⋆ h ( e ) would be in both S and W ∖ S , a contradiction. Therefore C 1 has empty environment. Also, since g ( b ) ∈ A , C 1 has nonempty agent. Therefore C 1 ≃ ⊤ . Symmetrically, if S ∈ Prevent ( C ) , then W ∖ S ∈ Ensure ( C ) , so C 0 ≃ ⊤ . □ Now we can reprove (a slightly stronger version of) our main incompatibility theorem. Theorem: If C ≄ ⊤ , then Ctrl ( C ) ∩ Obs ( C ) = { } . Proof: We prove the contrapositive. Assume S ∈ Ctrl ( C ) ∩ Obs ( C ) . Let C ≃ C 0 & C 1 , with Image ( C 0 ) ⊆ S and Image ( C 1 ) ⊆ W ∖ S . By the above lemma, both C 0 ≃ ⊤ and C 1 ≃ ⊤ . Thus C ≃ ⊤ & ⊤ ≅ ⊤ . □ We also reprove (the important direction of) the one-sided result. Theorem: If S ∈ Ensure ( C ) ∩ Obs ( C ) , then Image ( C ) ⊆ S . Proof: If S ∈ Ensure ( C ) ∩ Obs ( C ) , then C ≃ C 0 & C 1 , with Image ( C 0 ) ⊆ S and Image ( C 1 ) ⊆ W ∖ S . By the above lemma, C 1 ≃ ⊤ , so C ≃ C 0 & ⊤ ≅ C 0 , so Image ( C ) ⊆ S . □ In our next post, we will move to discussing Cartesian frames over different worlds, or different world models. E.g., W might be the set of all possible microphysical states of a room, while V is the smaller set of all possible arrangements of macroscopic objects in the room. We will describe how to translate between frames over W and frames over V . In the process, we will note some surprising facts about coarser and more refined models of the world, as they relate to observables.