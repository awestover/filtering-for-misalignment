Goodhart's law states: Any observed statistical regularity will tend to collapse once pressure is placed upon it for control purposes. One way of framing this is that, when you are solving some optimization problem, a metric that is correlated with a desired objective will often stop being correlated with the objective when you look at the extreme values of the metric.  For example, although the number of paperclips a paperclip factory produces tends to be correlated with how useful the factory is for its owner's values, a paperclip factory that produces an extremely high number of paperclips is likely to be quite bad for its owner's values. Let's try to formalize this.  Suppose you are finding some x ∈ X that optimizes some unknown objective function f : X → R , and you have some estimate g : X → R which you believe to approximate f .  Specifically, you have a guarantee that, for some base distribution γ : Δ X , g does not
incorrectly estimate f much on average: E X ∼ γ [ | g ( x ) − f ( x ) | ] ≤ k We might suppose that we only want to take actions if our expected f is above zero; otherwise, it would be better to do nothing. Given this, how do you pick an x to guarantee a good objective value f ( x ) across all possible objective functions f ?  Naively, you might pick x = arg max x ∈ X g ( x ) ; however, if this x has a low probability under γ , then it is possible for g ( x ) to be much higher than f ( x ) without causing g to overestimate f much on average . If f is chosen adversarially, the optimization problem to solve is: arg max a ∈ [ 0 , 1 ] , p ∈ Δ X min f : X → R , E X ∼ γ [ | g ( x ) − f ( x ) | ] ≤ k a E X ∼ p [ f ( X ) ] where a is the probability that the agent takes an action at all, and p is the action distribution if it takes an action.  Equivalently, since the most adversarial f values will not ever be above g : arg max a ∈ [ 0 , 1 ] , p ∈ Δ X min f : X → R , ∀ x f ( x ) ≤ g ( x ) , E X ∼ γ [ g ( x ) − f ( x ) ] ≤ k a E X ∼ p [ f ( X ) ] Define c ( x ) = g ( x ) − f ( x ) : arg max a ∈ [ 0 , 1 ] , p ∈ Δ X min c : X → R + , E X ∼ γ [ c ( x ) ] ≤ k a E X ∼ p [ g ( X ) − c ( X ) ] arg max a ∈ [ 0 , 1 ] , p ∈ Δ X a min c : X → R + , E X ∼ γ [ c ( x ) ] ≤ k E X ∼ p [ g ( X ) − c ( X ) ] arg max a ∈ { 0 , 1 } , p ∈ Δ X a min c : X → R + , E X ∼ γ [ c ( x ) ] ≤ k E X ∼ p [ g ( X ) − c ( X ) ] In fact, when a = 1 , the solution to this optimization problem is a q -quantilizer with utility function g and base distribution γ , for some q .  The proof can be found in the "Optimality of quantilizers under the cost constraint" section of the post about quantilizers . a will be set to 1 if and only if this quantilizer is guaranteed positive utility. This provides another view of what quantilizers are doing.  In effect, they are treating the "utility function" U as an estimate of the true utility function U − c that tends to be accurate on average across the base distribution γ , and conservatively optimizing given adversarial uncertainty about the true utility function U − c .