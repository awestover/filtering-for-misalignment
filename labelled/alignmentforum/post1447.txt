People who’ve spent a lot of time thinking about P vs NP often have the intuition that “verification is easier than generation”. It’s easier to verify a solution to some equations than to find a solution. It’s easier to verify a password than to guess it. That sort of thing. The claim that it is easier to verify solutions to such problems than to generate them is essentially the claim that P ≠ NP, a conjecture which is widely believed to be true. Thus the intuition that verification is generally easier than generation. The problem is, this intuition comes from thinking about problems which are in NP . NP is, roughly speaking, the class of algorithmic problems for which solutions are easy to verify. Verifying the solution to some equations is easy, so that problem is in NP. I think a more accurate takeaway would be that among problems in NP , verification is easier than generation. In other words, among problems for which verification is easy, verification is easier than generation. Rather a less impressive claim, when you put it like that. With that in mind, here is an algorithmic problem for which generation is easier than verification. Predicate: given a program, does it halt? Generation problem: generate a program which halts. Verification problem: given a program, verify that it halts. The generation problem is trivial. The verification problem is uncomputable. That’s it for the post, you all can argue about the application to alignment in the comment section.